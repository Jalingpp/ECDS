syntax = "proto3";

package proto;

option go_package = "./";

service SiaACService {
    rpc SiaSelectSNs(SiaStorageRequest) returns (SiaStorageResponse);      //客户端向AC申请存储文件，获取存储各分片的存储节点id
    rpc SiaPutFileCommit(SiaPFCRequest) returns (SiaPFCResponse);          //客户端向AC确认完成文件存储
    rpc SiaGetFileSNs(SiaGFACRequest) returns (SiaGFACResponse);           //客户端向AC请求存储文件数据分片的存储节点id
    rpc SiaGetDSErrReport(SiaGDSERequest) returns (SiaGDSEResponse);                //客户端向AC报告存储分片获取有误，并申请校验分片
    rpc SiaUpdateFileReq(SiaUFRequest) returns (SiaUFResponse);            //客户端向AC请求修改存储文件所有副本的数据
    rpc SiaUpdateFileCommit(SiaUFCRequest) returns (SiaUFCResponse);       //客户端向AC确认完成所有文件副本的数据更新
}

//客户端发起的存储请求
message SiaStorageRequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //待存储的文件名
    int32 version = 3;      //待存储的文件版本号
}

//审计方对存储请求的回复
message SiaStorageResponse {
    string filename = 1;  //待存储的文件名
    repeated string sns_for_ds = 2;  //用于存储数据分片的存储节点id，下标对应分片的序号
    repeated string sns_for_ps = 3;  //用于存储校验分片的存储节点id，下标对应分片的序号
}

message Int32ArrayACSia {
    repeated int32 values = 1;
}

//客户端发起的写元信息请求
message SiaPFCRequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //文件名
    map<string, bytes> dshashmap = 3;  //各分片的哈希值
}

//审计方对写元信息请求的回复
message SiaPFCResponse {
    string filename = 1;  //待存储的文件名
    string message = 2;    //返回消息
}

//客户端发起的获取文件请求
message SiaGFACRequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //请求的文件名
}

//审计方对获取文件请求的回复
message SiaGFACResponse {
    string filename = 1;  //请求的文件名
    int32 version = 2;    //文件版本号
    map<string, string> snsds = 3;  //数据分片所在的存储节点id，key:filename-i,value:snid
    map<string, bytes>  roots = 4;  //客户端所在存储节点Merkel树根节点哈希值，key:snid,value:hash值
}

//客户端发起的获取分片错误仲裁请求
message SiaGDSERequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //请求的文件名
    map<string,string> errdssn = 3;  //发生错误的存储节点id,key:dsno,value:snid
    map<string,string> blacksns = 4;   //存储节点黑名单,key:snid,value:h-黑,b-白
}

//审计方对获取分片错误仲裁请求的回复
message SiaGDSEResponse {
    string filename = 1;  //请求的文件名
    map<string, string> snsds = 2;  //校验分片所在的存储节点id，key:dsno,value:snid
    map<string,bytes> roots = 3;    //客户端所在存储节点Merkel树根节点哈希值，key:snid,value:hash值
}

//客户端发起的文件数据更新请求
message SiaUFRequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //文件名
    int32 version = 3;     //文件版本号
}

//审计方对数据分片元信息更新请求的回复
message SiaUFResponse {
    string filename = 1;  //待更新的文件名
    map<string, string> snsds = 2;  //数据分片所在的存储节点id，key:filename-i,value:snid
}

//客户端发起的数据分片元信息更新请求
message SiaUFCRequest {
    string clientId = 1;   //客户端ID
    string filename = 2;   //文件名
    map<string, Int32ArrayACSia> randmap = 3;  //各副本对应的随机数集
    map<string, bytes> rootmap = 4; //各副本对应的默克尔树根哈希
}

//审计方对数据分片元信息更新请求的回复
message SiaUFCResponse {
    string filename = 1;  //待存储的文件名
    string message = 2;  //附带信息
}