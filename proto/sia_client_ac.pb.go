// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: sia_client_ac.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的存储请求
type SiaStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Version  int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`  //待存储的文件版本号
}

func (x *SiaStorageRequest) Reset() {
	*x = SiaStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaStorageRequest) ProtoMessage() {}

func (x *SiaStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaStorageRequest.ProtoReflect.Descriptor instead.
func (*SiaStorageRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{0}
}

func (x *SiaStorageRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaStorageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaStorageRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 审计方对存储请求的回复
type SiaStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                   //待存储的文件名
	SnsForDs []string `protobuf:"bytes,2,rep,name=sns_for_ds,json=snsForDs,proto3" json:"sns_for_ds,omitempty"` //用于存储数据分片的存储节点id，下标对应分片的序号
	SnsForPs []string `protobuf:"bytes,3,rep,name=sns_for_ps,json=snsForPs,proto3" json:"sns_for_ps,omitempty"` //用于存储校验分片的存储节点id，下标对应分片的序号
}

func (x *SiaStorageResponse) Reset() {
	*x = SiaStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaStorageResponse) ProtoMessage() {}

func (x *SiaStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaStorageResponse.ProtoReflect.Descriptor instead.
func (*SiaStorageResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{1}
}

func (x *SiaStorageResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaStorageResponse) GetSnsForDs() []string {
	if x != nil {
		return x.SnsForDs
	}
	return nil
}

func (x *SiaStorageResponse) GetSnsForPs() []string {
	if x != nil {
		return x.SnsForPs
	}
	return nil
}

type Int32ArrayACSia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Int32ArrayACSia) Reset() {
	*x = Int32ArrayACSia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32ArrayACSia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32ArrayACSia) ProtoMessage() {}

func (x *Int32ArrayACSia) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32ArrayACSia.ProtoReflect.Descriptor instead.
func (*Int32ArrayACSia) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{2}
}

func (x *Int32ArrayACSia) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// 客户端发起的写元信息请求
type SiaPFCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId  string            `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                                                           //客户端ID
	Filename  string            `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                                                           //文件名
	Dshashmap map[string][]byte `protobuf:"bytes,3,rep,name=dshashmap,proto3" json:"dshashmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //各分片的哈希值
}

func (x *SiaPFCRequest) Reset() {
	*x = SiaPFCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaPFCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPFCRequest) ProtoMessage() {}

func (x *SiaPFCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPFCRequest.ProtoReflect.Descriptor instead.
func (*SiaPFCRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{3}
}

func (x *SiaPFCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaPFCRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPFCRequest) GetDshashmap() map[string][]byte {
	if x != nil {
		return x.Dshashmap
	}
	return nil
}

// 审计方对写元信息请求的回复
type SiaPFCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //返回消息
}

func (x *SiaPFCResponse) Reset() {
	*x = SiaPFCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaPFCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPFCResponse) ProtoMessage() {}

func (x *SiaPFCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPFCResponse.ProtoReflect.Descriptor instead.
func (*SiaPFCResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{4}
}

func (x *SiaPFCResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPFCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的获取文件请求
type SiaGFACRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //请求的文件名
}

func (x *SiaGFACRequest) Reset() {
	*x = SiaGFACRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGFACRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGFACRequest) ProtoMessage() {}

func (x *SiaGFACRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGFACRequest.ProtoReflect.Descriptor instead.
func (*SiaGFACRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{5}
}

func (x *SiaGFACRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaGFACRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// 审计方对获取文件请求的回复
type SiaGFACResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string            `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                                   //请求的文件名
	Version  int32             `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                                                                                    //文件版本号
	Snsds    map[string]string `protobuf:"bytes,3,rep,name=snsds,proto3" json:"snsds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //数据分片所在的存储节点id，key:filename-i,value:snid
}

func (x *SiaGFACResponse) Reset() {
	*x = SiaGFACResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGFACResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGFACResponse) ProtoMessage() {}

func (x *SiaGFACResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGFACResponse.ProtoReflect.Descriptor instead.
func (*SiaGFACResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{6}
}

func (x *SiaGFACResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGFACResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SiaGFACResponse) GetSnsds() map[string]string {
	if x != nil {
		return x.Snsds
	}
	return nil
}

// 客户端发起的获取文件请求
type SiaGRRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //请求的文件名
	Rep      string `protobuf:"bytes,3,opt,name=rep,proto3" json:"rep,omitempty"`           //请求的文件副本号
}

func (x *SiaGRRRequest) Reset() {
	*x = SiaGRRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGRRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGRRRequest) ProtoMessage() {}

func (x *SiaGRRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGRRRequest.ProtoReflect.Descriptor instead.
func (*SiaGRRRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{7}
}

func (x *SiaGRRRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaGRRRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGRRRequest) GetRep() string {
	if x != nil {
		return x.Rep
	}
	return ""
}

// 审计方对获取文件请求的回复
type SiaGRRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rands *Int32ArrayACSia `protobuf:"bytes,1,opt,name=rands,proto3" json:"rands,omitempty"` //请求的副本对应的随机数集
	Root  []byte           `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`   //请求的副本对应的默克尔树根
}

func (x *SiaGRRResponse) Reset() {
	*x = SiaGRRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGRRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGRRResponse) ProtoMessage() {}

func (x *SiaGRRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGRRResponse.ProtoReflect.Descriptor instead.
func (*SiaGRRResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{8}
}

func (x *SiaGRRResponse) GetRands() *Int32ArrayACSia {
	if x != nil {
		return x.Rands
	}
	return nil
}

func (x *SiaGRRResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

// 客户端发起的文件数据更新请求
type SiaUFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	Version  int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`  //文件版本号
}

func (x *SiaUFRequest) Reset() {
	*x = SiaUFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFRequest) ProtoMessage() {}

func (x *SiaUFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFRequest.ProtoReflect.Descriptor instead.
func (*SiaUFRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{9}
}

func (x *SiaUFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaUFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 审计方对数据分片元信息更新请求的回复
type SiaUFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string            `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                                   //待更新的文件名
	Snsds    map[string]string `protobuf:"bytes,2,rep,name=snsds,proto3" json:"snsds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //数据分片所在的存储节点id，key:filename-i,value:snid
}

func (x *SiaUFResponse) Reset() {
	*x = SiaUFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFResponse) ProtoMessage() {}

func (x *SiaUFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFResponse.ProtoReflect.Descriptor instead.
func (*SiaUFResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{10}
}

func (x *SiaUFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFResponse) GetSnsds() map[string]string {
	if x != nil {
		return x.Snsds
	}
	return nil
}

// 客户端发起的数据分片元信息更新请求
type SiaUFCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string                      `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                                                       //客户端ID
	Filename string                      `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                                                       //文件名
	Randmap  map[string]*Int32ArrayACSia `protobuf:"bytes,3,rep,name=randmap,proto3" json:"randmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //各副本对应的随机数集
	Rootmap  map[string][]byte           `protobuf:"bytes,4,rep,name=rootmap,proto3" json:"rootmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //各副本对应的默克尔树根哈希
}

func (x *SiaUFCRequest) Reset() {
	*x = SiaUFCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUFCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFCRequest) ProtoMessage() {}

func (x *SiaUFCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFCRequest.ProtoReflect.Descriptor instead.
func (*SiaUFCRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{11}
}

func (x *SiaUFCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaUFCRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFCRequest) GetRandmap() map[string]*Int32ArrayACSia {
	if x != nil {
		return x.Randmap
	}
	return nil
}

func (x *SiaUFCRequest) GetRootmap() map[string][]byte {
	if x != nil {
		return x.Rootmap
	}
	return nil
}

// 审计方对数据分片元信息更新请求的回复
type SiaUFCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //附带信息
}

func (x *SiaUFCResponse) Reset() {
	*x = SiaUFCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_ac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUFCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFCResponse) ProtoMessage() {}

func (x *SiaUFCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFCResponse.ProtoReflect.Descriptor instead.
func (*SiaUFCResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{12}
}

func (x *SiaUFCResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sia_client_ac_proto protoreflect.FileDescriptor

var file_sia_client_ac_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x69, 0x61, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x11,
	0x53, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x12, 0x53, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x6e, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6e, 0x73, 0x46, 0x6f,
	0x72, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x6e, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50,
	0x73, 0x22, 0x29, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x41,
	0x43, 0x53, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc8, 0x01, 0x0a,
	0x0d, 0x53, 0x69, 0x61, 0x50, 0x46, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x73, 0x68, 0x61, 0x73, 0x68,
	0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x69, 0x61, 0x50, 0x46, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x73, 0x68, 0x61, 0x73, 0x68, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x64, 0x73, 0x68, 0x61, 0x73, 0x68, 0x6d, 0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x44, 0x73, 0x68,
	0x61, 0x73, 0x68, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x69, 0x61, 0x50, 0x46,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x48, 0x0a, 0x0e, 0x53, 0x69, 0x61, 0x47, 0x46, 0x41, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x53, 0x69,
	0x61, 0x47, 0x46, 0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x6e, 0x73, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x46,
	0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6e, 0x73, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x6e, 0x73, 0x64, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x53, 0x6e, 0x73, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x59, 0x0a, 0x0d, 0x53, 0x69, 0x61, 0x47, 0x52, 0x52,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65,
	0x70, 0x22, 0x52, 0x0a, 0x0e, 0x53, 0x69, 0x61, 0x47, 0x52, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x43, 0x53, 0x69, 0x61, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x60, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x55, 0x46, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x61, 0x55,
	0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x6e, 0x73, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61,
	0x55, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6e, 0x73, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x6e, 0x73, 0x64, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x53, 0x6e, 0x73, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1, 0x02, 0x0a, 0x0d, 0x53, 0x69, 0x61, 0x55, 0x46,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x46, 0x43,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x70, 0x12, 0x3b, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x46, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x6d, 0x61, 0x70, 0x1a, 0x52, 0x0a, 0x0c, 0x52, 0x61,
	0x6e, 0x64, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x43,
	0x53, 0x69, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a,
	0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x74, 0x6d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x69,
	0x61, 0x55, 0x46, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0x96, 0x03, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x41, 0x43, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x53, 0x4e, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x53, 0x69, 0x61, 0x50,
	0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x50, 0x46, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x50, 0x46,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x69, 0x61,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x4e, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x46, 0x41, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x46, 0x41,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x53, 0x69, 0x61,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x52, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x52, 0x52,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x53, 0x69, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x46, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x53, 0x69, 0x61, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x46, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61,
	0x55, 0x46, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sia_client_ac_proto_rawDescOnce sync.Once
	file_sia_client_ac_proto_rawDescData = file_sia_client_ac_proto_rawDesc
)

func file_sia_client_ac_proto_rawDescGZIP() []byte {
	file_sia_client_ac_proto_rawDescOnce.Do(func() {
		file_sia_client_ac_proto_rawDescData = protoimpl.X.CompressGZIP(file_sia_client_ac_proto_rawDescData)
	})
	return file_sia_client_ac_proto_rawDescData
}

var file_sia_client_ac_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sia_client_ac_proto_goTypes = []any{
	(*SiaStorageRequest)(nil),  // 0: proto.SiaStorageRequest
	(*SiaStorageResponse)(nil), // 1: proto.SiaStorageResponse
	(*Int32ArrayACSia)(nil),    // 2: proto.Int32ArrayACSia
	(*SiaPFCRequest)(nil),      // 3: proto.SiaPFCRequest
	(*SiaPFCResponse)(nil),     // 4: proto.SiaPFCResponse
	(*SiaGFACRequest)(nil),     // 5: proto.SiaGFACRequest
	(*SiaGFACResponse)(nil),    // 6: proto.SiaGFACResponse
	(*SiaGRRRequest)(nil),      // 7: proto.SiaGRRRequest
	(*SiaGRRResponse)(nil),     // 8: proto.SiaGRRResponse
	(*SiaUFRequest)(nil),       // 9: proto.SiaUFRequest
	(*SiaUFResponse)(nil),      // 10: proto.SiaUFResponse
	(*SiaUFCRequest)(nil),      // 11: proto.SiaUFCRequest
	(*SiaUFCResponse)(nil),     // 12: proto.SiaUFCResponse
	nil,                        // 13: proto.SiaPFCRequest.DshashmapEntry
	nil,                        // 14: proto.SiaGFACResponse.SnsdsEntry
	nil,                        // 15: proto.SiaUFResponse.SnsdsEntry
	nil,                        // 16: proto.SiaUFCRequest.RandmapEntry
	nil,                        // 17: proto.SiaUFCRequest.RootmapEntry
}
var file_sia_client_ac_proto_depIdxs = []int32{
	13, // 0: proto.SiaPFCRequest.dshashmap:type_name -> proto.SiaPFCRequest.DshashmapEntry
	14, // 1: proto.SiaGFACResponse.snsds:type_name -> proto.SiaGFACResponse.SnsdsEntry
	2,  // 2: proto.SiaGRRResponse.rands:type_name -> proto.Int32ArrayACSia
	15, // 3: proto.SiaUFResponse.snsds:type_name -> proto.SiaUFResponse.SnsdsEntry
	16, // 4: proto.SiaUFCRequest.randmap:type_name -> proto.SiaUFCRequest.RandmapEntry
	17, // 5: proto.SiaUFCRequest.rootmap:type_name -> proto.SiaUFCRequest.RootmapEntry
	2,  // 6: proto.SiaUFCRequest.RandmapEntry.value:type_name -> proto.Int32ArrayACSia
	0,  // 7: proto.SiaACService.SiaSelectSNs:input_type -> proto.SiaStorageRequest
	3,  // 8: proto.SiaACService.SiaPutFileCommit:input_type -> proto.SiaPFCRequest
	5,  // 9: proto.SiaACService.SiaGetFileSNs:input_type -> proto.SiaGFACRequest
	7,  // 10: proto.SiaACService.SiaGetRandRoot:input_type -> proto.SiaGRRRequest
	9,  // 11: proto.SiaACService.SiaUpdateFileReq:input_type -> proto.SiaUFRequest
	11, // 12: proto.SiaACService.SiaUpdateFileCommit:input_type -> proto.SiaUFCRequest
	1,  // 13: proto.SiaACService.SiaSelectSNs:output_type -> proto.SiaStorageResponse
	4,  // 14: proto.SiaACService.SiaPutFileCommit:output_type -> proto.SiaPFCResponse
	6,  // 15: proto.SiaACService.SiaGetFileSNs:output_type -> proto.SiaGFACResponse
	8,  // 16: proto.SiaACService.SiaGetRandRoot:output_type -> proto.SiaGRRResponse
	10, // 17: proto.SiaACService.SiaUpdateFileReq:output_type -> proto.SiaUFResponse
	12, // 18: proto.SiaACService.SiaUpdateFileCommit:output_type -> proto.SiaUFCResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_sia_client_ac_proto_init() }
func file_sia_client_ac_proto_init() {
	if File_sia_client_ac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sia_client_ac_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SiaStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SiaStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Int32ArrayACSia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SiaPFCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SiaPFCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGFACRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGFACResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGRRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGRRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUFCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_ac_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUFCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sia_client_ac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sia_client_ac_proto_goTypes,
		DependencyIndexes: file_sia_client_ac_proto_depIdxs,
		MessageInfos:      file_sia_client_ac_proto_msgTypes,
	}.Build()
	File_sia_client_ac_proto = out.File
	file_sia_client_ac_proto_rawDesc = nil
	file_sia_client_ac_proto_goTypes = nil
	file_sia_client_ac_proto_depIdxs = nil
}
