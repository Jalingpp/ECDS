// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: sia_client_ac.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的存储请求
type SiaStorageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Version       int32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`  //待存储的文件版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaStorageRequest) Reset() {
	*x = SiaStorageRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaStorageRequest) ProtoMessage() {}

func (x *SiaStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaStorageRequest.ProtoReflect.Descriptor instead.
func (*SiaStorageRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{0}
}

func (x *SiaStorageRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaStorageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaStorageRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 审计方对存储请求的回复
type SiaStorageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                   //待存储的文件名
	SnsForDs      []string               `protobuf:"bytes,2,rep,name=sns_for_ds,json=snsForDs,proto3" json:"sns_for_ds,omitempty"` //用于存储数据分片的存储节点id，下标对应分片的序号
	SnsForPs      []string               `protobuf:"bytes,3,rep,name=sns_for_ps,json=snsForPs,proto3" json:"sns_for_ps,omitempty"` //用于存储校验分片的存储节点id，下标对应分片的序号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaStorageResponse) Reset() {
	*x = SiaStorageResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaStorageResponse) ProtoMessage() {}

func (x *SiaStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaStorageResponse.ProtoReflect.Descriptor instead.
func (*SiaStorageResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{1}
}

func (x *SiaStorageResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaStorageResponse) GetSnsForDs() []string {
	if x != nil {
		return x.SnsForDs
	}
	return nil
}

func (x *SiaStorageResponse) GetSnsForPs() []string {
	if x != nil {
		return x.SnsForPs
	}
	return nil
}

// 客户端发起的写元信息请求
type SiaPFCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                                             //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                                             //文件名
	Dshashmap     map[string][]byte      `protobuf:"bytes,3,rep,name=dshashmap,proto3" json:"dshashmap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //各分片的哈希值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaPFCRequest) Reset() {
	*x = SiaPFCRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaPFCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPFCRequest) ProtoMessage() {}

func (x *SiaPFCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPFCRequest.ProtoReflect.Descriptor instead.
func (*SiaPFCRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{2}
}

func (x *SiaPFCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaPFCRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPFCRequest) GetDshashmap() map[string][]byte {
	if x != nil {
		return x.Dshashmap
	}
	return nil
}

// 审计方对写元信息请求的回复
type SiaPFCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //返回消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaPFCResponse) Reset() {
	*x = SiaPFCResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaPFCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPFCResponse) ProtoMessage() {}

func (x *SiaPFCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPFCResponse.ProtoReflect.Descriptor instead.
func (*SiaPFCResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{3}
}

func (x *SiaPFCResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPFCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的获取文件请求
type SiaGFACRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //请求的文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGFACRequest) Reset() {
	*x = SiaGFACRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGFACRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGFACRequest) ProtoMessage() {}

func (x *SiaGFACRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGFACRequest.ProtoReflect.Descriptor instead.
func (*SiaGFACRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{4}
}

func (x *SiaGFACRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaGFACRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// 审计方对获取文件请求的回复
type SiaGFACResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                            //请求的文件名
	Versions      map[string]int32       `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` //数据分片的版本号，key:cid-filename-i,value:version
	Snsds         map[string]string      `protobuf:"bytes,3,rep,name=snsds,proto3" json:"snsds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`        //数据分片所在的存储节点id，key:filename-i,value:snid
	Roots         map[string][]byte      `protobuf:"bytes,4,rep,name=roots,proto3" json:"roots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`        //客户端所在存储节点Merkel树根节点哈希值，key:snid,value:hash值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGFACResponse) Reset() {
	*x = SiaGFACResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGFACResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGFACResponse) ProtoMessage() {}

func (x *SiaGFACResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGFACResponse.ProtoReflect.Descriptor instead.
func (*SiaGFACResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{5}
}

func (x *SiaGFACResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGFACResponse) GetVersions() map[string]int32 {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *SiaGFACResponse) GetSnsds() map[string]string {
	if x != nil {
		return x.Snsds
	}
	return nil
}

func (x *SiaGFACResponse) GetRoots() map[string][]byte {
	if x != nil {
		return x.Roots
	}
	return nil
}

// 客户端发起的获取分片错误仲裁请求
type SiaGDSERequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                                           //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                                           //请求的文件名
	Errdssn       map[string]string      `protobuf:"bytes,3,rep,name=errdssn,proto3" json:"errdssn,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`   //发生错误的存储节点id,key:dsno,value:snid
	Blacksns      map[string]string      `protobuf:"bytes,4,rep,name=blacksns,proto3" json:"blacksns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //存储节点黑名单,key:snid,value:h-黑,b-白
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGDSERequest) Reset() {
	*x = SiaGDSERequest{}
	mi := &file_sia_client_ac_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGDSERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGDSERequest) ProtoMessage() {}

func (x *SiaGDSERequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGDSERequest.ProtoReflect.Descriptor instead.
func (*SiaGDSERequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{6}
}

func (x *SiaGDSERequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaGDSERequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGDSERequest) GetErrdssn() map[string]string {
	if x != nil {
		return x.Errdssn
	}
	return nil
}

func (x *SiaGDSERequest) GetBlacksns() map[string]string {
	if x != nil {
		return x.Blacksns
	}
	return nil
}

// 审计方对获取分片错误仲裁请求的回复
type SiaGDSEResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                     //请求的文件名
	Snsds         map[string]string      `protobuf:"bytes,2,rep,name=snsds,proto3" json:"snsds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //校验分片所在的存储节点id，key:dsno,value:snid
	Roots         map[string][]byte      `protobuf:"bytes,3,rep,name=roots,proto3" json:"roots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //客户端所在存储节点Merkel树根节点哈希值，key:snid,value:hash值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGDSEResponse) Reset() {
	*x = SiaGDSEResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGDSEResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGDSEResponse) ProtoMessage() {}

func (x *SiaGDSEResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGDSEResponse.ProtoReflect.Descriptor instead.
func (*SiaGDSEResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{7}
}

func (x *SiaGDSEResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGDSEResponse) GetSnsds() map[string]string {
	if x != nil {
		return x.Snsds
	}
	return nil
}

func (x *SiaGDSEResponse) GetRoots() map[string][]byte {
	if x != nil {
		return x.Roots
	}
	return nil
}

type SiaGDSPSSNRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clientid      string                 `protobuf:"bytes,1,opt,name=clientid,proto3" json:"clientid,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	Dsno          string                 `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`         //分片号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGDSPSSNRequest) Reset() {
	*x = SiaGDSPSSNRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGDSPSSNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGDSPSSNRequest) ProtoMessage() {}

func (x *SiaGDSPSSNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGDSPSSNRequest.ProtoReflect.Descriptor instead.
func (*SiaGDSPSSNRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{8}
}

func (x *SiaGDSPSSNRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SiaGDSPSSNRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGDSPSSNRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

type SiaGDSPSSNResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                             //文件名
	Dssn          string                 `protobuf:"bytes,2,opt,name=dssn,proto3" json:"dssn,omitempty"`                                                                                     //dsno所在的存储节点id
	Paritysns     map[string]string      `protobuf:"bytes,3,rep,name=paritysns,proto3" json:"paritysns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //校验块所在的存储节点id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaGDSPSSNResponse) Reset() {
	*x = SiaGDSPSSNResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaGDSPSSNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGDSPSSNResponse) ProtoMessage() {}

func (x *SiaGDSPSSNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGDSPSSNResponse.ProtoReflect.Descriptor instead.
func (*SiaGDSPSSNResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{9}
}

func (x *SiaGDSPSSNResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGDSPSSNResponse) GetDssn() string {
	if x != nil {
		return x.Dssn
	}
	return ""
}

func (x *SiaGDSPSSNResponse) GetParitysns() map[string]string {
	if x != nil {
		return x.Paritysns
	}
	return nil
}

// 客户端发起的文件数据更新请求
type SiaUFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clientid      string                 `protobuf:"bytes,1,opt,name=clientid,proto3" json:"clientid,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	Dsno          string                 `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`         //分片号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaUFRequest) Reset() {
	*x = SiaUFRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaUFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFRequest) ProtoMessage() {}

func (x *SiaUFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFRequest.ProtoReflect.Descriptor instead.
func (*SiaUFRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{10}
}

func (x *SiaUFRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *SiaUFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

// 审计方对数据分片元信息更新请求的回复
type SiaUFResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Filename       string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                                        //文件名
	Dssn           string                 `protobuf:"bytes,2,opt,name=dssn,proto3" json:"dssn,omitempty"`                                                                                                //dsno所在的存储节点id
	Dsversion      int32                  `protobuf:"varint,3,opt,name=dsversion,proto3" json:"dsversion,omitempty"`                                                                                     //dsno当前版本
	Paritysns      map[string]string      `protobuf:"bytes,4,rep,name=paritysns,proto3" json:"paritysns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`            //校验块所在的存储节点id
	Parityversions map[string]int32       `protobuf:"bytes,5,rep,name=parityversions,proto3" json:"parityversions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` //校验块当前版本
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SiaUFResponse) Reset() {
	*x = SiaUFResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaUFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFResponse) ProtoMessage() {}

func (x *SiaUFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFResponse.ProtoReflect.Descriptor instead.
func (*SiaUFResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{11}
}

func (x *SiaUFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFResponse) GetDssn() string {
	if x != nil {
		return x.Dssn
	}
	return ""
}

func (x *SiaUFResponse) GetDsversion() int32 {
	if x != nil {
		return x.Dsversion
	}
	return 0
}

func (x *SiaUFResponse) GetParitysns() map[string]string {
	if x != nil {
		return x.Paritysns
	}
	return nil
}

func (x *SiaUFResponse) GetParityversions() map[string]int32 {
	if x != nil {
		return x.Parityversions
	}
	return nil
}

// 客户端发起的数据分片元信息更新请求
type SiaUFCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                                             //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                                             //文件名
	Dshashmap     map[string][]byte      `protobuf:"bytes,3,rep,name=dshashmap,proto3" json:"dshashmap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` //各分片的哈希值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaUFCRequest) Reset() {
	*x = SiaUFCRequest{}
	mi := &file_sia_client_ac_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaUFCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFCRequest) ProtoMessage() {}

func (x *SiaUFCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFCRequest.ProtoReflect.Descriptor instead.
func (*SiaUFCRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{12}
}

func (x *SiaUFCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaUFCRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFCRequest) GetDshashmap() map[string][]byte {
	if x != nil {
		return x.Dshashmap
	}
	return nil
}

// 审计方对数据分片元信息更新请求的回复
type SiaUFCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待更新的文件名
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //返回消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SiaUFCResponse) Reset() {
	*x = SiaUFCResponse{}
	mi := &file_sia_client_ac_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SiaUFCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUFCResponse) ProtoMessage() {}

func (x *SiaUFCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_ac_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUFCResponse.ProtoReflect.Descriptor instead.
func (*SiaUFCResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_ac_proto_rawDescGZIP(), []int{13}
}

func (x *SiaUFCResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUFCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sia_client_ac_proto protoreflect.FileDescriptor

const file_sia_client_ac_proto_rawDesc = "" +
	"\n" +
	"\x13sia_client_ac.proto\x12\x05proto\"e\n" +
	"\x11SiaStorageRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x05R\aversion\"l\n" +
	"\x12SiaStorageResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1c\n" +
	"\n" +
	"sns_for_ds\x18\x02 \x03(\tR\bsnsForDs\x12\x1c\n" +
	"\n" +
	"sns_for_ps\x18\x03 \x03(\tR\bsnsForPs\"\xc8\x01\n" +
	"\rSiaPFCRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12A\n" +
	"\tdshashmap\x18\x03 \x03(\v2#.proto.SiaPFCRequest.DshashmapEntryR\tdshashmap\x1a<\n" +
	"\x0eDshashmapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"F\n" +
	"\x0eSiaPFCResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"H\n" +
	"\x0eSiaGFACRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"\x92\x03\n" +
	"\x0fSiaGFACResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12@\n" +
	"\bversions\x18\x02 \x03(\v2$.proto.SiaGFACResponse.VersionsEntryR\bversions\x127\n" +
	"\x05snsds\x18\x03 \x03(\v2!.proto.SiaGFACResponse.SnsdsEntryR\x05snsds\x127\n" +
	"\x05roots\x18\x04 \x03(\v2!.proto.SiaGFACResponse.RootsEntryR\x05roots\x1a;\n" +
	"\rVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"SnsdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"RootsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xc0\x02\n" +
	"\x0eSiaGDSERequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12<\n" +
	"\aerrdssn\x18\x03 \x03(\v2\".proto.SiaGDSERequest.ErrdssnEntryR\aerrdssn\x12?\n" +
	"\bblacksns\x18\x04 \x03(\v2#.proto.SiaGDSERequest.BlacksnsEntryR\bblacksns\x1a:\n" +
	"\fErrdssnEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rBlacksnsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x02\n" +
	"\x0fSiaGDSEResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x127\n" +
	"\x05snsds\x18\x02 \x03(\v2!.proto.SiaGDSEResponse.SnsdsEntryR\x05snsds\x127\n" +
	"\x05roots\x18\x03 \x03(\v2!.proto.SiaGDSEResponse.RootsEntryR\x05roots\x1a8\n" +
	"\n" +
	"SnsdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"RootsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"_\n" +
	"\x11SiaGDSPSSNRequest\x12\x1a\n" +
	"\bclientid\x18\x01 \x01(\tR\bclientid\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04dsno\x18\x03 \x01(\tR\x04dsno\"\xca\x01\n" +
	"\x12SiaGDSPSSNResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04dssn\x18\x02 \x01(\tR\x04dssn\x12F\n" +
	"\tparitysns\x18\x03 \x03(\v2(.proto.SiaGDSPSSNResponse.ParitysnsEntryR\tparitysns\x1a<\n" +
	"\x0eParitysnsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\fSiaUFRequest\x12\x1a\n" +
	"\bclientid\x18\x01 \x01(\tR\bclientid\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04dsno\x18\x03 \x01(\tR\x04dsno\"\xf3\x02\n" +
	"\rSiaUFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04dssn\x18\x02 \x01(\tR\x04dssn\x12\x1c\n" +
	"\tdsversion\x18\x03 \x01(\x05R\tdsversion\x12A\n" +
	"\tparitysns\x18\x04 \x03(\v2#.proto.SiaUFResponse.ParitysnsEntryR\tparitysns\x12P\n" +
	"\x0eparityversions\x18\x05 \x03(\v2(.proto.SiaUFResponse.ParityversionsEntryR\x0eparityversions\x1a<\n" +
	"\x0eParitysnsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ParityversionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xc8\x01\n" +
	"\rSiaUFCRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12A\n" +
	"\tdshashmap\x18\x03 \x03(\v2#.proto.SiaUFCRequest.DshashmapEntryR\tdshashmap\x1a<\n" +
	"\x0eDshashmapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"F\n" +
	"\x0eSiaUFCResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xe1\x03\n" +
	"\fSiaACService\x12C\n" +
	"\fSiaSelectSNs\x12\x18.proto.SiaStorageRequest\x1a\x19.proto.SiaStorageResponse\x12?\n" +
	"\x10SiaPutFileCommit\x12\x14.proto.SiaPFCRequest\x1a\x15.proto.SiaPFCResponse\x12>\n" +
	"\rSiaGetFileSNs\x12\x15.proto.SiaGFACRequest\x1a\x16.proto.SiaGFACResponse\x12B\n" +
	"\x11SiaGetDSErrReport\x12\x15.proto.SiaGDSERequest\x1a\x16.proto.SiaGDSEResponse\x12D\n" +
	"\rSiaGetDSPSSNs\x12\x18.proto.SiaGDSPSSNRequest\x1a\x19.proto.SiaGDSPSSNResponse\x12=\n" +
	"\x10SiaUpdateFileReq\x12\x13.proto.SiaUFRequest\x1a\x14.proto.SiaUFResponse\x12B\n" +
	"\x13SiaUpdateFileCommit\x12\x14.proto.SiaUFCRequest\x1a\x15.proto.SiaUFCResponseB\x04Z\x02./b\x06proto3"

var (
	file_sia_client_ac_proto_rawDescOnce sync.Once
	file_sia_client_ac_proto_rawDescData []byte
)

func file_sia_client_ac_proto_rawDescGZIP() []byte {
	file_sia_client_ac_proto_rawDescOnce.Do(func() {
		file_sia_client_ac_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sia_client_ac_proto_rawDesc), len(file_sia_client_ac_proto_rawDesc)))
	})
	return file_sia_client_ac_proto_rawDescData
}

var file_sia_client_ac_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_sia_client_ac_proto_goTypes = []any{
	(*SiaStorageRequest)(nil),  // 0: proto.SiaStorageRequest
	(*SiaStorageResponse)(nil), // 1: proto.SiaStorageResponse
	(*SiaPFCRequest)(nil),      // 2: proto.SiaPFCRequest
	(*SiaPFCResponse)(nil),     // 3: proto.SiaPFCResponse
	(*SiaGFACRequest)(nil),     // 4: proto.SiaGFACRequest
	(*SiaGFACResponse)(nil),    // 5: proto.SiaGFACResponse
	(*SiaGDSERequest)(nil),     // 6: proto.SiaGDSERequest
	(*SiaGDSEResponse)(nil),    // 7: proto.SiaGDSEResponse
	(*SiaGDSPSSNRequest)(nil),  // 8: proto.SiaGDSPSSNRequest
	(*SiaGDSPSSNResponse)(nil), // 9: proto.SiaGDSPSSNResponse
	(*SiaUFRequest)(nil),       // 10: proto.SiaUFRequest
	(*SiaUFResponse)(nil),      // 11: proto.SiaUFResponse
	(*SiaUFCRequest)(nil),      // 12: proto.SiaUFCRequest
	(*SiaUFCResponse)(nil),     // 13: proto.SiaUFCResponse
	nil,                        // 14: proto.SiaPFCRequest.DshashmapEntry
	nil,                        // 15: proto.SiaGFACResponse.VersionsEntry
	nil,                        // 16: proto.SiaGFACResponse.SnsdsEntry
	nil,                        // 17: proto.SiaGFACResponse.RootsEntry
	nil,                        // 18: proto.SiaGDSERequest.ErrdssnEntry
	nil,                        // 19: proto.SiaGDSERequest.BlacksnsEntry
	nil,                        // 20: proto.SiaGDSEResponse.SnsdsEntry
	nil,                        // 21: proto.SiaGDSEResponse.RootsEntry
	nil,                        // 22: proto.SiaGDSPSSNResponse.ParitysnsEntry
	nil,                        // 23: proto.SiaUFResponse.ParitysnsEntry
	nil,                        // 24: proto.SiaUFResponse.ParityversionsEntry
	nil,                        // 25: proto.SiaUFCRequest.DshashmapEntry
}
var file_sia_client_ac_proto_depIdxs = []int32{
	14, // 0: proto.SiaPFCRequest.dshashmap:type_name -> proto.SiaPFCRequest.DshashmapEntry
	15, // 1: proto.SiaGFACResponse.versions:type_name -> proto.SiaGFACResponse.VersionsEntry
	16, // 2: proto.SiaGFACResponse.snsds:type_name -> proto.SiaGFACResponse.SnsdsEntry
	17, // 3: proto.SiaGFACResponse.roots:type_name -> proto.SiaGFACResponse.RootsEntry
	18, // 4: proto.SiaGDSERequest.errdssn:type_name -> proto.SiaGDSERequest.ErrdssnEntry
	19, // 5: proto.SiaGDSERequest.blacksns:type_name -> proto.SiaGDSERequest.BlacksnsEntry
	20, // 6: proto.SiaGDSEResponse.snsds:type_name -> proto.SiaGDSEResponse.SnsdsEntry
	21, // 7: proto.SiaGDSEResponse.roots:type_name -> proto.SiaGDSEResponse.RootsEntry
	22, // 8: proto.SiaGDSPSSNResponse.paritysns:type_name -> proto.SiaGDSPSSNResponse.ParitysnsEntry
	23, // 9: proto.SiaUFResponse.paritysns:type_name -> proto.SiaUFResponse.ParitysnsEntry
	24, // 10: proto.SiaUFResponse.parityversions:type_name -> proto.SiaUFResponse.ParityversionsEntry
	25, // 11: proto.SiaUFCRequest.dshashmap:type_name -> proto.SiaUFCRequest.DshashmapEntry
	0,  // 12: proto.SiaACService.SiaSelectSNs:input_type -> proto.SiaStorageRequest
	2,  // 13: proto.SiaACService.SiaPutFileCommit:input_type -> proto.SiaPFCRequest
	4,  // 14: proto.SiaACService.SiaGetFileSNs:input_type -> proto.SiaGFACRequest
	6,  // 15: proto.SiaACService.SiaGetDSErrReport:input_type -> proto.SiaGDSERequest
	8,  // 16: proto.SiaACService.SiaGetDSPSSNs:input_type -> proto.SiaGDSPSSNRequest
	10, // 17: proto.SiaACService.SiaUpdateFileReq:input_type -> proto.SiaUFRequest
	12, // 18: proto.SiaACService.SiaUpdateFileCommit:input_type -> proto.SiaUFCRequest
	1,  // 19: proto.SiaACService.SiaSelectSNs:output_type -> proto.SiaStorageResponse
	3,  // 20: proto.SiaACService.SiaPutFileCommit:output_type -> proto.SiaPFCResponse
	5,  // 21: proto.SiaACService.SiaGetFileSNs:output_type -> proto.SiaGFACResponse
	7,  // 22: proto.SiaACService.SiaGetDSErrReport:output_type -> proto.SiaGDSEResponse
	9,  // 23: proto.SiaACService.SiaGetDSPSSNs:output_type -> proto.SiaGDSPSSNResponse
	11, // 24: proto.SiaACService.SiaUpdateFileReq:output_type -> proto.SiaUFResponse
	13, // 25: proto.SiaACService.SiaUpdateFileCommit:output_type -> proto.SiaUFCResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sia_client_ac_proto_init() }
func file_sia_client_ac_proto_init() {
	if File_sia_client_ac_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sia_client_ac_proto_rawDesc), len(file_sia_client_ac_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sia_client_ac_proto_goTypes,
		DependencyIndexes: file_sia_client_ac_proto_depIdxs,
		MessageInfos:      file_sia_client_ac_proto_msgTypes,
	}.Build()
	File_sia_client_ac_proto = out.File
	file_sia_client_ac_proto_goTypes = nil
	file_sia_client_ac_proto_depIdxs = nil
}
