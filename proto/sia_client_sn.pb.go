// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: sia_client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Int32ArraySNSia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Int32ArraySNSia) Reset() {
	*x = Int32ArraySNSia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32ArraySNSia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32ArraySNSia) ProtoMessage() {}

func (x *Int32ArraySNSia) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32ArraySNSia.ProtoReflect.Descriptor instead.
func (*Int32ArraySNSia) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *Int32ArraySNSia) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// 客户端发起的向存储节点放置数据分片的请求
type SiaPutFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId  string  `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`           //客户端ID
	Filename  string  `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`           //待存储的文件名
	Dsno      string  `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`                   //文件分片的序号，数据分片为d-0,d-1,...，校验分片为p-0,p-1,...
	Version   int32   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`            //文件版本号
	DataShard []int32 `protobuf:"varint,5,rep,packed,name=dataShard,proto3" json:"dataShard,omitempty"` //序列化后的数据分片
}

func (x *SiaPutFRequest) Reset() {
	*x = SiaPutFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaPutFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPutFRequest) ProtoMessage() {}

func (x *SiaPutFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPutFRequest.ProtoReflect.Descriptor instead.
func (*SiaPutFRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *SiaPutFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaPutFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPutFRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *SiaPutFRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SiaPutFRequest) GetDataShard() []int32 {
	if x != nil {
		return x.DataShard
	}
	return nil
}

// 存储节点对请求的回复
type SiaPutFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,2,opt,name=dsno,proto3" json:"dsno,omitempty"`         //文件分片的序号，数据分片为d-0,d-1,...，校验分片为p-0,p-1,...
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
}

func (x *SiaPutFResponse) Reset() {
	*x = SiaPutFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaPutFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaPutFResponse) ProtoMessage() {}

func (x *SiaPutFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaPutFResponse.ProtoReflect.Descriptor instead.
func (*SiaPutFResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *SiaPutFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaPutFResponse) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *SiaPutFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type SiaGetFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`         //请求的分片号
}

func (x *SiaGetFRequest) Reset() {
	*x = SiaGetFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGetFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGetFRequest) ProtoMessage() {}

func (x *SiaGetFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGetFRequest.ProtoReflect.Descriptor instead.
func (*SiaGetFRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *SiaGetFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaGetFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGetFRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

// 存储节点对请求的回复
type SiaGetFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`           //文件名
	Version    int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`            //文件版本号
	DataShard  []int32  `protobuf:"varint,3,rep,packed,name=dataShard,proto3" json:"dataShard,omitempty"` //序列化后的数据分片
	Merklepath [][]byte `protobuf:"bytes,4,rep,name=merklepath,proto3" json:"merklepath,omitempty"`       //数据分片的可验证存储路径
	Index      int32    `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`                //数据分片所在叶子列表中的索引
}

func (x *SiaGetFResponse) Reset() {
	*x = SiaGetFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaGetFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaGetFResponse) ProtoMessage() {}

func (x *SiaGetFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaGetFResponse.ProtoReflect.Descriptor instead.
func (*SiaGetFResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *SiaGetFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaGetFResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SiaGetFResponse) GetDataShard() []int32 {
	if x != nil {
		return x.DataShard
	}
	return nil
}

func (x *SiaGetFResponse) GetMerklepath() [][]byte {
	if x != nil {
		return x.Merklepath
	}
	return nil
}

func (x *SiaGetFResponse) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// 客户端发起的向存储节点更新数据分片的请求
type SiaUpdFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string             `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                             //客户端ID
	Filename     string             `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                             //待更新的文件名
	Rep          int32              `protobuf:"varint,3,opt,name=rep,proto3" json:"rep,omitempty"`                                      //待更新的文件副本号
	DataShards   []*Int32ArraySNSia `protobuf:"bytes,4,rep,name=dataShards,proto3" json:"dataShards,omitempty"`                         //序列化后的数据分片
	MerkleLeaves [][]byte           `protobuf:"bytes,5,rep,name=merkle_leaves,json=merkleLeaves,proto3" json:"merkle_leaves,omitempty"` //所有叶子节点
}

func (x *SiaUpdFRequest) Reset() {
	*x = SiaUpdFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUpdFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUpdFRequest) ProtoMessage() {}

func (x *SiaUpdFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUpdFRequest.ProtoReflect.Descriptor instead.
func (*SiaUpdFRequest) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *SiaUpdFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SiaUpdFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUpdFRequest) GetRep() int32 {
	if x != nil {
		return x.Rep
	}
	return 0
}

func (x *SiaUpdFRequest) GetDataShards() []*Int32ArraySNSia {
	if x != nil {
		return x.DataShards
	}
	return nil
}

func (x *SiaUpdFRequest) GetMerkleLeaves() [][]byte {
	if x != nil {
		return x.MerkleLeaves
	}
	return nil
}

// 存储节点对请求的回复
type SiaUpdFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno    int32  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Root     []byte `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`         //存储节点计算得到的根哈希
	Message  string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
}

func (x *SiaUpdFResponse) Reset() {
	*x = SiaUpdFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sia_client_sn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiaUpdFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiaUpdFResponse) ProtoMessage() {}

func (x *SiaUpdFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sia_client_sn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiaUpdFResponse.ProtoReflect.Descriptor instead.
func (*SiaUpdFResponse) Descriptor() ([]byte, []int) {
	return file_sia_client_sn_proto_rawDescGZIP(), []int{6}
}

func (x *SiaUpdFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SiaUpdFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *SiaUpdFResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *SiaUpdFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sia_client_sn_proto protoreflect.FileDescriptor

var file_sia_client_sn_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x69, 0x61, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x4e, 0x53, 0x69, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x61, 0x50,
	0x75, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x22, 0x5b,
	0x0a, 0x0f, 0x53, 0x69, 0x61, 0x50, 0x75, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0e, 0x53,
	0x69, 0x61, 0x47, 0x65, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x53, 0x69,
	0x61, 0x47, 0x65, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x61, 0x55,
	0x70, 0x64, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x4e, 0x53, 0x69, 0x61,
	0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x73, 0x22, 0x71, 0x0a, 0x0f, 0x53, 0x69, 0x61, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xce, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x53, 0x4e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x50, 0x75, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x53, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69,
	0x61, 0x50, 0x75, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x50, 0x75, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x69, 0x61, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x53, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61,
	0x47, 0x65, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x47, 0x65, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x69, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x53, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x69, 0x61, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x61, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sia_client_sn_proto_rawDescOnce sync.Once
	file_sia_client_sn_proto_rawDescData = file_sia_client_sn_proto_rawDesc
)

func file_sia_client_sn_proto_rawDescGZIP() []byte {
	file_sia_client_sn_proto_rawDescOnce.Do(func() {
		file_sia_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_sia_client_sn_proto_rawDescData)
	})
	return file_sia_client_sn_proto_rawDescData
}

var file_sia_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sia_client_sn_proto_goTypes = []any{
	(*Int32ArraySNSia)(nil), // 0: proto.Int32ArraySNSia
	(*SiaPutFRequest)(nil),  // 1: proto.SiaPutFRequest
	(*SiaPutFResponse)(nil), // 2: proto.SiaPutFResponse
	(*SiaGetFRequest)(nil),  // 3: proto.SiaGetFRequest
	(*SiaGetFResponse)(nil), // 4: proto.SiaGetFResponse
	(*SiaUpdFRequest)(nil),  // 5: proto.SiaUpdFRequest
	(*SiaUpdFResponse)(nil), // 6: proto.SiaUpdFResponse
}
var file_sia_client_sn_proto_depIdxs = []int32{
	0, // 0: proto.SiaUpdFRequest.dataShards:type_name -> proto.Int32ArraySNSia
	1, // 1: proto.SiaSNService.SiaPutFileDS:input_type -> proto.SiaPutFRequest
	3, // 2: proto.SiaSNService.SiaGetFileDS:input_type -> proto.SiaGetFRequest
	5, // 3: proto.SiaSNService.SiaUpdateFileDS:input_type -> proto.SiaUpdFRequest
	2, // 4: proto.SiaSNService.SiaPutFileDS:output_type -> proto.SiaPutFResponse
	4, // 5: proto.SiaSNService.SiaGetFileDS:output_type -> proto.SiaGetFResponse
	6, // 6: proto.SiaSNService.SiaUpdateFileDS:output_type -> proto.SiaUpdFResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sia_client_sn_proto_init() }
func file_sia_client_sn_proto_init() {
	if File_sia_client_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sia_client_sn_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Int32ArraySNSia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SiaPutFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SiaPutFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGetFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SiaGetFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUpdFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sia_client_sn_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SiaUpdFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sia_client_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sia_client_sn_proto_goTypes,
		DependencyIndexes: file_sia_client_sn_proto_depIdxs,
		MessageInfos:      file_sia_client_sn_proto_msgTypes,
	}.Build()
	File_sia_client_sn_proto = out.File
	file_sia_client_sn_proto_rawDesc = nil
	file_sia_client_sn_proto_goTypes = nil
	file_sia_client_sn_proto_depIdxs = nil
}
