// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: storj_client_ac.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StorjACServiceClient is the client API for StorjACService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StorjACServiceClient interface {
	StorjSelectSNs(ctx context.Context, in *StorjStorageRequest, opts ...grpc.CallOption) (*StorjStorageResponse, error)
	StorjPutFileCommit(ctx context.Context, in *StorjPFCRequest, opts ...grpc.CallOption) (*StorjPFCResponse, error)
	StorjGetFileSNs(ctx context.Context, in *StorjGFACRequest, opts ...grpc.CallOption) (*StorjGFACResponse, error)
	StorjGetRandRoot(ctx context.Context, in *StorjGRRRequest, opts ...grpc.CallOption) (*StorjGRRResponse, error)
	StorjUpdateFileReq(ctx context.Context, in *StorjUFRequest, opts ...grpc.CallOption) (*StorjUFResponse, error)
	StorjUpdateFileCommit(ctx context.Context, in *StorjUFCRequest, opts ...grpc.CallOption) (*StorjUFCResponse, error)
}

type storjACServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStorjACServiceClient(cc grpc.ClientConnInterface) StorjACServiceClient {
	return &storjACServiceClient{cc}
}

func (c *storjACServiceClient) StorjSelectSNs(ctx context.Context, in *StorjStorageRequest, opts ...grpc.CallOption) (*StorjStorageResponse, error) {
	out := new(StorjStorageResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjSelectSNs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjACServiceClient) StorjPutFileCommit(ctx context.Context, in *StorjPFCRequest, opts ...grpc.CallOption) (*StorjPFCResponse, error) {
	out := new(StorjPFCResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjPutFileCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjACServiceClient) StorjGetFileSNs(ctx context.Context, in *StorjGFACRequest, opts ...grpc.CallOption) (*StorjGFACResponse, error) {
	out := new(StorjGFACResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjGetFileSNs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjACServiceClient) StorjGetRandRoot(ctx context.Context, in *StorjGRRRequest, opts ...grpc.CallOption) (*StorjGRRResponse, error) {
	out := new(StorjGRRResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjGetRandRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjACServiceClient) StorjUpdateFileReq(ctx context.Context, in *StorjUFRequest, opts ...grpc.CallOption) (*StorjUFResponse, error) {
	out := new(StorjUFResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjUpdateFileReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjACServiceClient) StorjUpdateFileCommit(ctx context.Context, in *StorjUFCRequest, opts ...grpc.CallOption) (*StorjUFCResponse, error) {
	out := new(StorjUFCResponse)
	err := c.cc.Invoke(ctx, "/proto.StorjACService/StorjUpdateFileCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorjACServiceServer is the server API for StorjACService service.
// All implementations must embed UnimplementedStorjACServiceServer
// for forward compatibility
type StorjACServiceServer interface {
	StorjSelectSNs(context.Context, *StorjStorageRequest) (*StorjStorageResponse, error)
	StorjPutFileCommit(context.Context, *StorjPFCRequest) (*StorjPFCResponse, error)
	StorjGetFileSNs(context.Context, *StorjGFACRequest) (*StorjGFACResponse, error)
	StorjGetRandRoot(context.Context, *StorjGRRRequest) (*StorjGRRResponse, error)
	StorjUpdateFileReq(context.Context, *StorjUFRequest) (*StorjUFResponse, error)
	StorjUpdateFileCommit(context.Context, *StorjUFCRequest) (*StorjUFCResponse, error)
	mustEmbedUnimplementedStorjACServiceServer()
}

// UnimplementedStorjACServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStorjACServiceServer struct {
}

func (UnimplementedStorjACServiceServer) StorjSelectSNs(context.Context, *StorjStorageRequest) (*StorjStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjSelectSNs not implemented")
}
func (UnimplementedStorjACServiceServer) StorjPutFileCommit(context.Context, *StorjPFCRequest) (*StorjPFCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjPutFileCommit not implemented")
}
func (UnimplementedStorjACServiceServer) StorjGetFileSNs(context.Context, *StorjGFACRequest) (*StorjGFACResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjGetFileSNs not implemented")
}
func (UnimplementedStorjACServiceServer) StorjGetRandRoot(context.Context, *StorjGRRRequest) (*StorjGRRResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjGetRandRoot not implemented")
}
func (UnimplementedStorjACServiceServer) StorjUpdateFileReq(context.Context, *StorjUFRequest) (*StorjUFResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjUpdateFileReq not implemented")
}
func (UnimplementedStorjACServiceServer) StorjUpdateFileCommit(context.Context, *StorjUFCRequest) (*StorjUFCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjUpdateFileCommit not implemented")
}
func (UnimplementedStorjACServiceServer) mustEmbedUnimplementedStorjACServiceServer() {}

// UnsafeStorjACServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StorjACServiceServer will
// result in compilation errors.
type UnsafeStorjACServiceServer interface {
	mustEmbedUnimplementedStorjACServiceServer()
}

func RegisterStorjACServiceServer(s grpc.ServiceRegistrar, srv StorjACServiceServer) {
	s.RegisterService(&StorjACService_ServiceDesc, srv)
}

func _StorjACService_StorjSelectSNs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjSelectSNs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjSelectSNs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjSelectSNs(ctx, req.(*StorjStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjACService_StorjPutFileCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjPFCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjPutFileCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjPutFileCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjPutFileCommit(ctx, req.(*StorjPFCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjACService_StorjGetFileSNs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjGFACRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjGetFileSNs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjGetFileSNs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjGetFileSNs(ctx, req.(*StorjGFACRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjACService_StorjGetRandRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjGRRRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjGetRandRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjGetRandRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjGetRandRoot(ctx, req.(*StorjGRRRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjACService_StorjUpdateFileReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjUFRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjUpdateFileReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjUpdateFileReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjUpdateFileReq(ctx, req.(*StorjUFRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjACService_StorjUpdateFileCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjUFCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjACServiceServer).StorjUpdateFileCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StorjACService/StorjUpdateFileCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjACServiceServer).StorjUpdateFileCommit(ctx, req.(*StorjUFCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StorjACService_ServiceDesc is the grpc.ServiceDesc for StorjACService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StorjACService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StorjACService",
	HandlerType: (*StorjACServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StorjSelectSNs",
			Handler:    _StorjACService_StorjSelectSNs_Handler,
		},
		{
			MethodName: "StorjPutFileCommit",
			Handler:    _StorjACService_StorjPutFileCommit_Handler,
		},
		{
			MethodName: "StorjGetFileSNs",
			Handler:    _StorjACService_StorjGetFileSNs_Handler,
		},
		{
			MethodName: "StorjGetRandRoot",
			Handler:    _StorjACService_StorjGetRandRoot_Handler,
		},
		{
			MethodName: "StorjUpdateFileReq",
			Handler:    _StorjACService_StorjUpdateFileReq_Handler,
		},
		{
			MethodName: "StorjUpdateFileCommit",
			Handler:    _StorjACService_StorjUpdateFileCommit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storj_client_ac.proto",
}
