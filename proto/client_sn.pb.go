// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的注册请求
type CRegistSNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	PK       []byte `protobuf:"bytes,2,opt,name=PK,proto3" json:"PK,omitempty"`             // 字节切片类型的PK字段
}

func (x *CRegistSNRequest) Reset() {
	*x = CRegistSNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRegistSNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRegistSNRequest) ProtoMessage() {}

func (x *CRegistSNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRegistSNRequest.ProtoReflect.Descriptor instead.
func (*CRegistSNRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *CRegistSNRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CRegistSNRequest) GetPK() []byte {
	if x != nil {
		return x.PK
	}
	return nil
}

// 存储节点对客户端注册请求的回复
type CRegistSNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //回复信息
}

func (x *CRegistSNResponse) Reset() {
	*x = CRegistSNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRegistSNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRegistSNResponse) ProtoMessage() {}

func (x *CRegistSNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRegistSNResponse.ProtoReflect.Descriptor instead.
func (*CRegistSNResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *CRegistSNResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CRegistSNResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点放置数据分片的请求
type PutDSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId            string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                  //客户端ID
	Filename            string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                  //待存储的文件名
	Dsno                string `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`                                                          //文件分片的序号，数据分片为d-0,d-1,...，校验分片为p-0,p-1,...
	DatashardSerialized []byte `protobuf:"bytes,4,opt,name=datashard_serialized,json=datashardSerialized,proto3" json:"datashard_serialized,omitempty"` //序列化后的数据分片
}

func (x *PutDSRequest) Reset() {
	*x = PutDSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDSRequest) ProtoMessage() {}

func (x *PutDSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDSRequest.ProtoReflect.Descriptor instead.
func (*PutDSRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *PutDSRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PutDSRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutDSRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *PutDSRequest) GetDatashardSerialized() []byte {
	if x != nil {
		return x.DatashardSerialized
	}
	return nil
}

// 存储节点对请求的回复
type PutDSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,2,opt,name=dsno,proto3" json:"dsno,omitempty"`         //待存储的分片序号
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
}

func (x *PutDSResponse) Reset() {
	*x = PutDSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDSResponse) ProtoMessage() {}

func (x *PutDSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDSResponse.ProtoReflect.Descriptor instead.
func (*PutDSResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *PutDSResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutDSResponse) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *PutDSResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type GetDSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`         //请求的分片序号
}

func (x *GetDSRequest) Reset() {
	*x = GetDSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDSRequest) ProtoMessage() {}

func (x *GetDSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDSRequest.ProtoReflect.Descriptor instead.
func (*GetDSRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *GetDSRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetDSRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetDSRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

// 存储节点对请求的回复
type GetDSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename            string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                  //待存储的文件名
	DatashardSerialized []byte `protobuf:"bytes,2,opt,name=datashard_serialized,json=datashardSerialized,proto3" json:"datashard_serialized,omitempty"` //序列化后的数据分片
}

func (x *GetDSResponse) Reset() {
	*x = GetDSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDSResponse) ProtoMessage() {}

func (x *GetDSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDSResponse.ProtoReflect.Descriptor instead.
func (*GetDSResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *GetDSResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetDSResponse) GetDatashardSerialized() []byte {
	if x != nil {
		return x.DatashardSerialized
	}
	return nil
}

// 客户端发起的向存储节点更新数据分片的请求
type UpdDSsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                     //客户端ID
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                     //待更新的文件名
	Dsnos                []string `protobuf:"bytes,3,rep,name=dsnos,proto3" json:"dsnos,omitempty"`                                                           //文件分片的序号，数据分片为d-0,d-1,...，校验分片为p-0,p-1,...
	DatashardsSerialized [][]byte `protobuf:"bytes,4,rep,name=datashards_serialized,json=datashardsSerialized,proto3" json:"datashards_serialized,omitempty"` //序列化后的数据分片
}

func (x *UpdDSsRequest) Reset() {
	*x = UpdDSsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdDSsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdDSsRequest) ProtoMessage() {}

func (x *UpdDSsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdDSsRequest.ProtoReflect.Descriptor instead.
func (*UpdDSsRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{6}
}

func (x *UpdDSsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UpdDSsRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UpdDSsRequest) GetDsnos() []string {
	if x != nil {
		return x.Dsnos
	}
	return nil
}

func (x *UpdDSsRequest) GetDatashardsSerialized() [][]byte {
	if x != nil {
		return x.DatashardsSerialized
	}
	return nil
}

// 存储节点对请求的回复
type UpdDSsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待更新的文件名
	Dsnos    []string `protobuf:"bytes,2,rep,name=dsnos,proto3" json:"dsnos,omitempty"`       //待更新的分片序号
	Message  string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并完成更新等信息
}

func (x *UpdDSsResponse) Reset() {
	*x = UpdDSsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdDSsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdDSsResponse) ProtoMessage() {}

func (x *UpdDSsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdDSsResponse.ProtoReflect.Descriptor instead.
func (*UpdDSsResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{7}
}

func (x *UpdDSsResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UpdDSsResponse) GetDsnos() []string {
	if x != nil {
		return x.Dsnos
	}
	return nil
}

func (x *UpdDSsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点放置校验分片增量的请求
type PutIPSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                     //客户端ID
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                     //待存储的文件名
	Psno                 string   `protobuf:"bytes,3,opt,name=psno,proto3" json:"psno,omitempty"`                                                             //校验分片的序号
	DatashardsSerialized [][]byte `protobuf:"bytes,4,rep,name=datashards_serialized,json=datashardsSerialized,proto3" json:"datashards_serialized,omitempty"` //序列化后的校验分片增量
	Randomnum            int32    `protobuf:"varint,5,opt,name=randomnum,proto3" json:"randomnum,omitempty"`                                                  //一个随机数，用于生成存储证明
}

func (x *PutIPSRequest) Reset() {
	*x = PutIPSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutIPSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutIPSRequest) ProtoMessage() {}

func (x *PutIPSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutIPSRequest.ProtoReflect.Descriptor instead.
func (*PutIPSRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{8}
}

func (x *PutIPSRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PutIPSRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutIPSRequest) GetPsno() string {
	if x != nil {
		return x.Psno
	}
	return ""
}

func (x *PutIPSRequest) GetDatashardsSerialized() [][]byte {
	if x != nil {
		return x.DatashardsSerialized
	}
	return nil
}

func (x *PutIPSRequest) GetRandomnum() int32 {
	if x != nil {
		return x.Randomnum
	}
	return 0
}

// 存储节点对请求的回复
type PutIPSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename      string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                //文件名
	Psno          string `protobuf:"bytes,2,opt,name=psno,proto3" json:"psno,omitempty"`                                        //已更新的校验分片序号
	PosSerialized []byte `protobuf:"bytes,3,opt,name=pos_serialized,json=posSerialized,proto3" json:"pos_serialized,omitempty"` //序列化后的校验块存储证明
}

func (x *PutIPSResponse) Reset() {
	*x = PutIPSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutIPSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutIPSResponse) ProtoMessage() {}

func (x *PutIPSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutIPSResponse.ProtoReflect.Descriptor instead.
func (*PutIPSResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{9}
}

func (x *PutIPSResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutIPSResponse) GetPsno() string {
	if x != nil {
		return x.Psno
	}
	return ""
}

func (x *PutIPSResponse) GetPosSerialized() []byte {
	if x != nil {
		return x.PosSerialized
	}
	return nil
}

type GSNSCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
}

func (x *GSNSCRequest) Reset() {
	*x = GSNSCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSNSCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSNSCRequest) ProtoMessage() {}

func (x *GSNSCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSNSCRequest.ProtoReflect.Descriptor instead.
func (*GSNSCRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{10}
}

func (x *GSNSCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GSNSCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	SnId        string `protobuf:"bytes,2,opt,name=snId,proto3" json:"snId,omitempty"`
	Storagecost int32  `protobuf:"varint,3,opt,name=storagecost,proto3" json:"storagecost,omitempty"`
}

func (x *GSNSCResponse) Reset() {
	*x = GSNSCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSNSCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSNSCResponse) ProtoMessage() {}

func (x *GSNSCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSNSCResponse.ProtoReflect.Descriptor instead.
func (*GSNSCResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{11}
}

func (x *GSNSCResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GSNSCResponse) GetSnId() string {
	if x != nil {
		return x.SnId
	}
	return ""
}

func (x *GSNSCResponse) GetStoragecost() int32 {
	if x != nil {
		return x.Storagecost
	}
	return 0
}

var File_client_sn_proto protoreflect.FileDescriptor

var file_client_sn_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x10, 0x43, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x4b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x50, 0x4b, 0x22, 0x49, 0x0a, 0x11, 0x43, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x53, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x73, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f,
	0x12, 0x31, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x22, 0x59, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x73, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5a,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x22, 0x5e, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x44, 0x53, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x73, 0x6e, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x6e, 0x6f, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22,
	0x5c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x44, 0x53, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x73, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73,
	0x6e, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x01,
	0x0a, 0x0d, 0x50, 0x75, 0x74, 0x49, 0x50, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x6e, 0x6f, 0x12, 0x33, 0x0a, 0x15, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x75, 0x6d, 0x22, 0x67,
	0x0a, 0x0e, 0x50, 0x75, 0x74, 0x49, 0x50, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x73, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x73, 0x6e, 0x6f,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x0c, 0x47, 0x53, 0x4e, 0x53, 0x43,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x0d, 0x47, 0x53, 0x4e, 0x53, 0x43, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x32, 0x8b, 0x03, 0x0a, 0x09, 0x53, 0x4e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x4e, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x53, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x44, 0x53, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x44, 0x53, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x75, 0x74, 0x49, 0x50, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x50, 0x53, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x4e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x53, 0x4e, 0x53, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x53, 0x4e, 0x53, 0x43, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_client_sn_proto_rawDescOnce sync.Once
	file_client_sn_proto_rawDescData = file_client_sn_proto_rawDesc
)

func file_client_sn_proto_rawDescGZIP() []byte {
	file_client_sn_proto_rawDescOnce.Do(func() {
		file_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_sn_proto_rawDescData)
	})
	return file_client_sn_proto_rawDescData
}

var file_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_client_sn_proto_goTypes = []any{
	(*CRegistSNRequest)(nil),  // 0: proto.CRegistSNRequest
	(*CRegistSNResponse)(nil), // 1: proto.CRegistSNResponse
	(*PutDSRequest)(nil),      // 2: proto.PutDSRequest
	(*PutDSResponse)(nil),     // 3: proto.PutDSResponse
	(*GetDSRequest)(nil),      // 4: proto.GetDSRequest
	(*GetDSResponse)(nil),     // 5: proto.GetDSResponse
	(*UpdDSsRequest)(nil),     // 6: proto.UpdDSsRequest
	(*UpdDSsResponse)(nil),    // 7: proto.UpdDSsResponse
	(*PutIPSRequest)(nil),     // 8: proto.PutIPSRequest
	(*PutIPSResponse)(nil),    // 9: proto.PutIPSResponse
	(*GSNSCRequest)(nil),      // 10: proto.GSNSCRequest
	(*GSNSCResponse)(nil),     // 11: proto.GSNSCResponse
}
var file_client_sn_proto_depIdxs = []int32{
	0,  // 0: proto.SNService.ClientRegisterSN:input_type -> proto.CRegistSNRequest
	2,  // 1: proto.SNService.PutDataShard:input_type -> proto.PutDSRequest
	4,  // 2: proto.SNService.GetDataShard:input_type -> proto.GetDSRequest
	6,  // 3: proto.SNService.UpdateDataShards:input_type -> proto.UpdDSsRequest
	8,  // 4: proto.SNService.PutIncParityShards:input_type -> proto.PutIPSRequest
	10, // 5: proto.SNService.GetSNStorageCost:input_type -> proto.GSNSCRequest
	1,  // 6: proto.SNService.ClientRegisterSN:output_type -> proto.CRegistSNResponse
	3,  // 7: proto.SNService.PutDataShard:output_type -> proto.PutDSResponse
	5,  // 8: proto.SNService.GetDataShard:output_type -> proto.GetDSResponse
	7,  // 9: proto.SNService.UpdateDataShards:output_type -> proto.UpdDSsResponse
	9,  // 10: proto.SNService.PutIncParityShards:output_type -> proto.PutIPSResponse
	11, // 11: proto.SNService.GetSNStorageCost:output_type -> proto.GSNSCResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_client_sn_proto_init() }
func file_client_sn_proto_init() {
	if File_client_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_sn_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CRegistSNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CRegistSNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PutDSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PutDSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetDSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetDSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdDSsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdDSsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PutIPSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PutIPSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GSNSCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GSNSCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_sn_proto_goTypes,
		DependencyIndexes: file_client_sn_proto_depIdxs,
		MessageInfos:      file_client_sn_proto_msgTypes,
	}.Build()
	File_client_sn_proto = out.File
	file_client_sn_proto_rawDesc = nil
	file_client_sn_proto_goTypes = nil
	file_client_sn_proto_depIdxs = nil
}
