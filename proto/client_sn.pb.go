// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的注册请求
type RegistSNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	G        []byte `protobuf:"bytes,2,opt,name=G,proto3" json:"G,omitempty"`               // 字节切片类型的G字段
	PK       []byte `protobuf:"bytes,3,opt,name=PK,proto3" json:"PK,omitempty"`             // 字节切片类型的PK字段
}

func (x *RegistSNRequest) Reset() {
	*x = RegistSNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistSNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistSNRequest) ProtoMessage() {}

func (x *RegistSNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistSNRequest.ProtoReflect.Descriptor instead.
func (*RegistSNRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *RegistSNRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegistSNRequest) GetG() []byte {
	if x != nil {
		return x.G
	}
	return nil
}

func (x *RegistSNRequest) GetPK() []byte {
	if x != nil {
		return x.PK
	}
	return nil
}

// 审计方对客户端注册请求的回复
type RegistSNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`   //回复信息
}

func (x *RegistSNResponse) Reset() {
	*x = RegistSNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistSNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistSNResponse) ProtoMessage() {}

func (x *RegistSNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistSNResponse.ProtoReflect.Descriptor instead.
func (*RegistSNResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *RegistSNResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegistSNResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点放置数据分片的请求
type PutDSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId            string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                                                  //客户端ID
	Filename            string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                                                  //待存储的文件名
	Dsno                string `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`                                                          //文件分片的序号，数据分片为d1,d2,...，校验分片为p1,p2,...
	DatashardSerialized []byte `protobuf:"bytes,4,opt,name=datashard_serialized,json=datashardSerialized,proto3" json:"datashard_serialized,omitempty"` //序列化后的数据分片
}

func (x *PutDSRequest) Reset() {
	*x = PutDSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDSRequest) ProtoMessage() {}

func (x *PutDSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDSRequest.ProtoReflect.Descriptor instead.
func (*PutDSRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *PutDSRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PutDSRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutDSRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *PutDSRequest) GetDatashardSerialized() []byte {
	if x != nil {
		return x.DatashardSerialized
	}
	return nil
}

// 存储节点对请求的回复
type PutDSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,2,opt,name=dsno,proto3" json:"dsno,omitempty"`         //待存储的分片序号
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
}

func (x *PutDSResponse) Reset() {
	*x = PutDSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDSResponse) ProtoMessage() {}

func (x *PutDSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDSResponse.ProtoReflect.Descriptor instead.
func (*PutDSResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *PutDSResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutDSResponse) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

func (x *PutDSResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type GetDSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Dsno     string `protobuf:"bytes,3,opt,name=dsno,proto3" json:"dsno,omitempty"`         //请求的分片序号
}

func (x *GetDSRequest) Reset() {
	*x = GetDSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDSRequest) ProtoMessage() {}

func (x *GetDSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDSRequest.ProtoReflect.Descriptor instead.
func (*GetDSRequest) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *GetDSRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetDSRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetDSRequest) GetDsno() string {
	if x != nil {
		return x.Dsno
	}
	return ""
}

// 存储节点对请求的回复
type GetDSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename            string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                  //待存储的文件名
	DatashardSerialized []byte `protobuf:"bytes,2,opt,name=datashard_serialized,json=datashardSerialized,proto3" json:"datashard_serialized,omitempty"` //序列化后的数据分片
}

func (x *GetDSResponse) Reset() {
	*x = GetDSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDSResponse) ProtoMessage() {}

func (x *GetDSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDSResponse.ProtoReflect.Descriptor instead.
func (*GetDSResponse) Descriptor() ([]byte, []int) {
	return file_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *GetDSResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetDSResponse) GetDatashardSerialized() []byte {
	if x != nil {
		return x.DatashardSerialized
	}
	return nil
}

var File_client_sn_proto protoreflect.FileDescriptor

var file_client_sn_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x47, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x47, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x50, 0x4b, 0x22, 0x48, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x53,
	0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x8d, 0x01, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x12, 0x31, 0x0a, 0x14,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22,
	0x59, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x73, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x73, 0x6e, 0x6f, 0x22, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x32, 0xc0, 0x01, 0x0a, 0x09, 0x53, 0x4e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x4e, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x53, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x53, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x75, 0x74, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_sn_proto_rawDescOnce sync.Once
	file_client_sn_proto_rawDescData = file_client_sn_proto_rawDesc
)

func file_client_sn_proto_rawDescGZIP() []byte {
	file_client_sn_proto_rawDescOnce.Do(func() {
		file_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_sn_proto_rawDescData)
	})
	return file_client_sn_proto_rawDescData
}

var file_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_client_sn_proto_goTypes = []interface{}{
	(*RegistSNRequest)(nil),  // 0: proto.RegistSNRequest
	(*RegistSNResponse)(nil), // 1: proto.RegistSNResponse
	(*PutDSRequest)(nil),     // 2: proto.PutDSRequest
	(*PutDSResponse)(nil),    // 3: proto.PutDSResponse
	(*GetDSRequest)(nil),     // 4: proto.GetDSRequest
	(*GetDSResponse)(nil),    // 5: proto.GetDSResponse
}
var file_client_sn_proto_depIdxs = []int32{
	0, // 0: proto.SNService.RegisterSN:input_type -> proto.RegistSNRequest
	2, // 1: proto.SNService.PutDataShard:input_type -> proto.PutDSRequest
	4, // 2: proto.SNService.GetDataShard:input_type -> proto.GetDSRequest
	1, // 3: proto.SNService.RegisterSN:output_type -> proto.RegistSNResponse
	3, // 4: proto.SNService.PutDataShard:output_type -> proto.PutDSResponse
	5, // 5: proto.SNService.GetDataShard:output_type -> proto.GetDSResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_client_sn_proto_init() }
func file_client_sn_proto_init() {
	if File_client_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_sn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistSNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistSNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_sn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_sn_proto_goTypes,
		DependencyIndexes: file_client_sn_proto_depIdxs,
		MessageInfos:      file_client_sn_proto_msgTypes,
	}.Build()
	File_client_sn_proto = out.File
	file_client_sn_proto_rawDesc = nil
	file_client_sn_proto_goTypes = nil
	file_client_sn_proto_depIdxs = nil
}
