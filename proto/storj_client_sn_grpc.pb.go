// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: storj_client_sn.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	StorjSNService_StorjPutFile_FullMethodName            = "/proto.StorjSNService/StorjPutFile"
	StorjSNService_StorjGetDataShard_FullMethodName       = "/proto.StorjSNService/StorjGetDataShard"
	StorjSNService_StorjUpdateDataShards_FullMethodName   = "/proto.StorjSNService/StorjUpdateDataShards"
	StorjSNService_StorjPutIncParityShards_FullMethodName = "/proto.StorjSNService/StorjPutIncParityShards"
)

// StorjSNServiceClient is the client API for StorjSNService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StorjSNServiceClient interface {
	StorjPutFile(ctx context.Context, in *StorjPutFRequest, opts ...grpc.CallOption) (*StorjPutFResponse, error)
	StorjGetDataShard(ctx context.Context, in *StorjGetDSRequest, opts ...grpc.CallOption) (*StorjGetDSResponse, error)
	StorjUpdateDataShards(ctx context.Context, in *StorjUpdDSsRequest, opts ...grpc.CallOption) (*StorjUpdDSsResponse, error)
	StorjPutIncParityShards(ctx context.Context, in *StorjPutIPSRequest, opts ...grpc.CallOption) (*StorjPutIPSResponse, error)
}

type storjSNServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStorjSNServiceClient(cc grpc.ClientConnInterface) StorjSNServiceClient {
	return &storjSNServiceClient{cc}
}

func (c *storjSNServiceClient) StorjPutFile(ctx context.Context, in *StorjPutFRequest, opts ...grpc.CallOption) (*StorjPutFResponse, error) {
	out := new(StorjPutFResponse)
	err := c.cc.Invoke(ctx, StorjSNService_StorjPutFile_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjSNServiceClient) StorjGetDataShard(ctx context.Context, in *StorjGetDSRequest, opts ...grpc.CallOption) (*StorjGetDSResponse, error) {
	out := new(StorjGetDSResponse)
	err := c.cc.Invoke(ctx, StorjSNService_StorjGetDataShard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjSNServiceClient) StorjUpdateDataShards(ctx context.Context, in *StorjUpdDSsRequest, opts ...grpc.CallOption) (*StorjUpdDSsResponse, error) {
	out := new(StorjUpdDSsResponse)
	err := c.cc.Invoke(ctx, StorjSNService_StorjUpdateDataShards_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storjSNServiceClient) StorjPutIncParityShards(ctx context.Context, in *StorjPutIPSRequest, opts ...grpc.CallOption) (*StorjPutIPSResponse, error) {
	out := new(StorjPutIPSResponse)
	err := c.cc.Invoke(ctx, StorjSNService_StorjPutIncParityShards_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorjSNServiceServer is the server API for StorjSNService service.
// All implementations must embed UnimplementedStorjSNServiceServer
// for forward compatibility
type StorjSNServiceServer interface {
	StorjPutFile(context.Context, *StorjPutFRequest) (*StorjPutFResponse, error)
	StorjGetDataShard(context.Context, *StorjGetDSRequest) (*StorjGetDSResponse, error)
	StorjUpdateDataShards(context.Context, *StorjUpdDSsRequest) (*StorjUpdDSsResponse, error)
	StorjPutIncParityShards(context.Context, *StorjPutIPSRequest) (*StorjPutIPSResponse, error)
	mustEmbedUnimplementedStorjSNServiceServer()
}

// UnimplementedStorjSNServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStorjSNServiceServer struct {
}

func (UnimplementedStorjSNServiceServer) StorjPutFile(context.Context, *StorjPutFRequest) (*StorjPutFResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjPutFile not implemented")
}
func (UnimplementedStorjSNServiceServer) StorjGetDataShard(context.Context, *StorjGetDSRequest) (*StorjGetDSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjGetDataShard not implemented")
}
func (UnimplementedStorjSNServiceServer) StorjUpdateDataShards(context.Context, *StorjUpdDSsRequest) (*StorjUpdDSsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjUpdateDataShards not implemented")
}
func (UnimplementedStorjSNServiceServer) StorjPutIncParityShards(context.Context, *StorjPutIPSRequest) (*StorjPutIPSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StorjPutIncParityShards not implemented")
}
func (UnimplementedStorjSNServiceServer) mustEmbedUnimplementedStorjSNServiceServer() {}

// UnsafeStorjSNServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StorjSNServiceServer will
// result in compilation errors.
type UnsafeStorjSNServiceServer interface {
	mustEmbedUnimplementedStorjSNServiceServer()
}

func RegisterStorjSNServiceServer(s grpc.ServiceRegistrar, srv StorjSNServiceServer) {
	s.RegisterService(&StorjSNService_ServiceDesc, srv)
}

func _StorjSNService_StorjPutFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjPutFRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjSNServiceServer).StorjPutFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorjSNService_StorjPutFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjSNServiceServer).StorjPutFile(ctx, req.(*StorjPutFRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjSNService_StorjGetDataShard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjGetDSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjSNServiceServer).StorjGetDataShard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorjSNService_StorjGetDataShard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjSNServiceServer).StorjGetDataShard(ctx, req.(*StorjGetDSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjSNService_StorjUpdateDataShards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjUpdDSsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjSNServiceServer).StorjUpdateDataShards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorjSNService_StorjUpdateDataShards_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjSNServiceServer).StorjUpdateDataShards(ctx, req.(*StorjUpdDSsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorjSNService_StorjPutIncParityShards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorjPutIPSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorjSNServiceServer).StorjPutIncParityShards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorjSNService_StorjPutIncParityShards_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorjSNServiceServer).StorjPutIncParityShards(ctx, req.(*StorjPutIPSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StorjSNService_ServiceDesc is the grpc.ServiceDesc for StorjSNService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StorjSNService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StorjSNService",
	HandlerType: (*StorjSNServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StorjPutFile",
			Handler:    _StorjSNService_StorjPutFile_Handler,
		},
		{
			MethodName: "StorjGetDataShard",
			Handler:    _StorjSNService_StorjGetDataShard_Handler,
		},
		{
			MethodName: "StorjUpdateDataShards",
			Handler:    _StorjSNService_StorjUpdateDataShards_Handler,
		},
		{
			MethodName: "StorjPutIncParityShards",
			Handler:    _StorjSNService_StorjPutIncParityShards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storj_client_sn.proto",
}
