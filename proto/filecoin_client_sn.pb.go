// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: filecoin_client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的向存储节点放置数据分片的请求
type FilecoinPutFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno    int32  `protobuf:"varint,3,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Version  int32  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`  //文件版本号
	Content  string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`   //文件内容
}

func (x *FilecoinPutFRequest) Reset() {
	*x = FilecoinPutFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinPutFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinPutFRequest) ProtoMessage() {}

func (x *FilecoinPutFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinPutFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinPutFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *FilecoinPutFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinPutFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinPutFRequest) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinPutFRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FilecoinPutFRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinPutFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno    int32  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息,存储完成返回OK,否则返回NO
}

func (x *FilecoinPutFResponse) Reset() {
	*x = FilecoinPutFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinPutFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinPutFResponse) ProtoMessage() {}

func (x *FilecoinPutFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinPutFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinPutFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *FilecoinPutFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinPutFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinPutFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type FilecoinGetFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Rep      string `protobuf:"bytes,3,opt,name=rep,proto3" json:"rep,omitempty"`           //请求的副本号
}

func (x *FilecoinGetFRequest) Reset() {
	*x = FilecoinGetFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinGetFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGetFRequest) ProtoMessage() {}

func (x *FilecoinGetFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGetFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinGetFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *FilecoinGetFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinGetFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinGetFRequest) GetRep() string {
	if x != nil {
		return x.Rep
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinGetFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	Version  int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`  //文件版本号
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`   //文件内容
}

func (x *FilecoinGetFResponse) Reset() {
	*x = FilecoinGetFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinGetFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGetFResponse) ProtoMessage() {}

func (x *FilecoinGetFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGetFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinGetFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *FilecoinGetFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinGetFResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FilecoinGetFResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 客户端发起的向存储节点更新数据分片的请求
type FilecoinUpdFRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId      string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`            //客户端ID
	Filename      string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`            //待更新的文件名
	Rep           int32  `protobuf:"varint,3,opt,name=rep,proto3" json:"rep,omitempty"`                     //待更新的文件副本号
	Originversion int32  `protobuf:"varint,4,opt,name=originversion,proto3" json:"originversion,omitempty"` //原始版本
	Newcontent    string `protobuf:"bytes,5,opt,name=newcontent,proto3" json:"newcontent,omitempty"`        //新的内容
}

func (x *FilecoinUpdFRequest) Reset() {
	*x = FilecoinUpdFRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinUpdFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinUpdFRequest) ProtoMessage() {}

func (x *FilecoinUpdFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinUpdFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinUpdFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *FilecoinUpdFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinUpdFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinUpdFRequest) GetRep() int32 {
	if x != nil {
		return x.Rep
	}
	return 0
}

func (x *FilecoinUpdFRequest) GetOriginversion() int32 {
	if x != nil {
		return x.Originversion
	}
	return 0
}

func (x *FilecoinUpdFRequest) GetNewcontent() string {
	if x != nil {
		return x.Newcontent
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinUpdFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno    int32  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
}

func (x *FilecoinUpdFResponse) Reset() {
	*x = FilecoinUpdFResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecoin_client_sn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinUpdFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinUpdFResponse) ProtoMessage() {}

func (x *FilecoinUpdFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinUpdFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinUpdFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *FilecoinUpdFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinUpdFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinUpdFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_filecoin_client_sn_proto protoreflect.FileDescriptor

var file_filecoin_client_sn_proto_rawDesc = []byte{
	0x0a, 0x18, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x75,
	0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x46,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x5f, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x70,
	0x22, 0x66, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x62, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x46,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xfa, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69,
	0x6e, 0x53, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x46, 0x69,
	0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x75,
	0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x74, 0x46, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filecoin_client_sn_proto_rawDescOnce sync.Once
	file_filecoin_client_sn_proto_rawDescData = file_filecoin_client_sn_proto_rawDesc
)

func file_filecoin_client_sn_proto_rawDescGZIP() []byte {
	file_filecoin_client_sn_proto_rawDescOnce.Do(func() {
		file_filecoin_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(file_filecoin_client_sn_proto_rawDescData)
	})
	return file_filecoin_client_sn_proto_rawDescData
}

var file_filecoin_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_filecoin_client_sn_proto_goTypes = []any{
	(*FilecoinPutFRequest)(nil),  // 0: proto.FilecoinPutFRequest
	(*FilecoinPutFResponse)(nil), // 1: proto.FilecoinPutFResponse
	(*FilecoinGetFRequest)(nil),  // 2: proto.FilecoinGetFRequest
	(*FilecoinGetFResponse)(nil), // 3: proto.FilecoinGetFResponse
	(*FilecoinUpdFRequest)(nil),  // 4: proto.FilecoinUpdFRequest
	(*FilecoinUpdFResponse)(nil), // 5: proto.FilecoinUpdFResponse
}
var file_filecoin_client_sn_proto_depIdxs = []int32{
	0, // 0: proto.FilecoinSNService.FilecoinPutFile:input_type -> proto.FilecoinPutFRequest
	2, // 1: proto.FilecoinSNService.FilecoinGetFile:input_type -> proto.FilecoinGetFRequest
	4, // 2: proto.FilecoinSNService.FilecoinUpdateFile:input_type -> proto.FilecoinUpdFRequest
	1, // 3: proto.FilecoinSNService.FilecoinPutFile:output_type -> proto.FilecoinPutFResponse
	3, // 4: proto.FilecoinSNService.FilecoinGetFile:output_type -> proto.FilecoinGetFResponse
	5, // 5: proto.FilecoinSNService.FilecoinUpdateFile:output_type -> proto.FilecoinUpdFResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_filecoin_client_sn_proto_init() }
func file_filecoin_client_sn_proto_init() {
	if File_filecoin_client_sn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filecoin_client_sn_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinPutFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecoin_client_sn_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinPutFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecoin_client_sn_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinGetFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecoin_client_sn_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinGetFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecoin_client_sn_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinUpdFRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecoin_client_sn_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FilecoinUpdFResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filecoin_client_sn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filecoin_client_sn_proto_goTypes,
		DependencyIndexes: file_filecoin_client_sn_proto_depIdxs,
		MessageInfos:      file_filecoin_client_sn_proto_msgTypes,
	}.Build()
	File_filecoin_client_sn_proto = out.File
	file_filecoin_client_sn_proto_rawDesc = nil
	file_filecoin_client_sn_proto_goTypes = nil
	file_filecoin_client_sn_proto_depIdxs = nil
}
