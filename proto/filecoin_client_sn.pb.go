// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: filecoin_client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端发起的向存储节点放置数据分片的请求
type FilecoinPutFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno         int32                  `protobuf:"varint,3,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`  //文件版本号
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`   //文件内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinPutFRequest) Reset() {
	*x = FilecoinPutFRequest{}
	mi := &file_filecoin_client_sn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinPutFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinPutFRequest) ProtoMessage() {}

func (x *FilecoinPutFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinPutFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinPutFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *FilecoinPutFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinPutFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinPutFRequest) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinPutFRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FilecoinPutFRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinPutFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno         int32                  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息,存储完成返回OK,否则返回NO
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinPutFResponse) Reset() {
	*x = FilecoinPutFResponse{}
	mi := &file_filecoin_client_sn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinPutFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinPutFResponse) ProtoMessage() {}

func (x *FilecoinPutFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinPutFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinPutFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *FilecoinPutFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinPutFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinPutFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type FilecoinGetFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Rep           string                 `protobuf:"bytes,3,opt,name=rep,proto3" json:"rep,omitempty"`           //请求的副本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinGetFRequest) Reset() {
	*x = FilecoinGetFRequest{}
	mi := &file_filecoin_client_sn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinGetFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGetFRequest) ProtoMessage() {}

func (x *FilecoinGetFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGetFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinGetFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *FilecoinGetFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinGetFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinGetFRequest) GetRep() string {
	if x != nil {
		return x.Rep
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinGetFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`  //文件版本号
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`   //文件内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinGetFResponse) Reset() {
	*x = FilecoinGetFResponse{}
	mi := &file_filecoin_client_sn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinGetFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGetFResponse) ProtoMessage() {}

func (x *FilecoinGetFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGetFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinGetFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *FilecoinGetFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinGetFResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FilecoinGetFResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 客户端发起的向存储节点更新数据分片的请求
type FilecoinUpdFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`            //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`            //待更新的文件名
	Rep           int32                  `protobuf:"varint,3,opt,name=rep,proto3" json:"rep,omitempty"`                     //待更新的文件副本号
	Originversion int32                  `protobuf:"varint,4,opt,name=originversion,proto3" json:"originversion,omitempty"` //原始版本
	Newcontent    string                 `protobuf:"bytes,5,opt,name=newcontent,proto3" json:"newcontent,omitempty"`        //新的内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinUpdFRequest) Reset() {
	*x = FilecoinUpdFRequest{}
	mi := &file_filecoin_client_sn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinUpdFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinUpdFRequest) ProtoMessage() {}

func (x *FilecoinUpdFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinUpdFRequest.ProtoReflect.Descriptor instead.
func (*FilecoinUpdFRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *FilecoinUpdFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinUpdFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinUpdFRequest) GetRep() int32 {
	if x != nil {
		return x.Rep
	}
	return 0
}

func (x *FilecoinUpdFRequest) GetOriginversion() int32 {
	if x != nil {
		return x.Originversion
	}
	return 0
}

func (x *FilecoinUpdFRequest) GetNewcontent() string {
	if x != nil {
		return x.Newcontent
	}
	return ""
}

// 存储节点对请求的回复
type FilecoinUpdFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno         int32                  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinUpdFResponse) Reset() {
	*x = FilecoinUpdFResponse{}
	mi := &file_filecoin_client_sn_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinUpdFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinUpdFResponse) ProtoMessage() {}

func (x *FilecoinUpdFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinUpdFResponse.ProtoReflect.Descriptor instead.
func (*FilecoinUpdFResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *FilecoinUpdFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FilecoinUpdFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *FilecoinUpdFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FilecoinGSNSCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinGSNSCRequest) Reset() {
	*x = FilecoinGSNSCRequest{}
	mi := &file_filecoin_client_sn_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinGSNSCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGSNSCRequest) ProtoMessage() {}

func (x *FilecoinGSNSCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGSNSCRequest.ProtoReflect.Descriptor instead.
func (*FilecoinGSNSCRequest) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{6}
}

func (x *FilecoinGSNSCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type FilecoinGSNSCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	SnId          string                 `protobuf:"bytes,2,opt,name=snId,proto3" json:"snId,omitempty"`
	Storagecost   int32                  `protobuf:"varint,3,opt,name=storagecost,proto3" json:"storagecost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilecoinGSNSCResponse) Reset() {
	*x = FilecoinGSNSCResponse{}
	mi := &file_filecoin_client_sn_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilecoinGSNSCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinGSNSCResponse) ProtoMessage() {}

func (x *FilecoinGSNSCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecoin_client_sn_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinGSNSCResponse.ProtoReflect.Descriptor instead.
func (*FilecoinGSNSCResponse) Descriptor() ([]byte, []int) {
	return file_filecoin_client_sn_proto_rawDescGZIP(), []int{7}
}

func (x *FilecoinGSNSCResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FilecoinGSNSCResponse) GetSnId() string {
	if x != nil {
		return x.SnId
	}
	return ""
}

func (x *FilecoinGSNSCResponse) GetStoragecost() int32 {
	if x != nil {
		return x.Storagecost
	}
	return 0
}

var File_filecoin_client_sn_proto protoreflect.FileDescriptor

const file_filecoin_client_sn_proto_rawDesc = "" +
	"\n" +
	"\x18filecoin_client_sn.proto\x12\x05proto\"\x97\x01\n" +
	"\x13FilecoinPutFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x03 \x01(\x05R\x05repno\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\"b\n" +
	"\x14FilecoinPutFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x02 \x01(\x05R\x05repno\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"_\n" +
	"\x13FilecoinGetFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x10\n" +
	"\x03rep\x18\x03 \x01(\tR\x03rep\"f\n" +
	"\x14FilecoinGetFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"\xa5\x01\n" +
	"\x13FilecoinUpdFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x10\n" +
	"\x03rep\x18\x03 \x01(\x05R\x03rep\x12$\n" +
	"\roriginversion\x18\x04 \x01(\x05R\roriginversion\x12\x1e\n" +
	"\n" +
	"newcontent\x18\x05 \x01(\tR\n" +
	"newcontent\"b\n" +
	"\x14FilecoinUpdFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x02 \x01(\x05R\x05repno\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"2\n" +
	"\x14FilecoinGSNSCRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\"i\n" +
	"\x15FilecoinGSNSCResponse\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x12\n" +
	"\x04snId\x18\x02 \x01(\tR\x04snId\x12 \n" +
	"\vstoragecost\x18\x03 \x01(\x05R\vstoragecost2\xd1\x02\n" +
	"\x11FilecoinSNService\x12J\n" +
	"\x0fFilecoinPutFile\x12\x1a.proto.FilecoinPutFRequest\x1a\x1b.proto.FilecoinPutFResponse\x12J\n" +
	"\x0fFilecoinGetFile\x12\x1a.proto.FilecoinGetFRequest\x1a\x1b.proto.FilecoinGetFResponse\x12M\n" +
	"\x12FilecoinUpdateFile\x12\x1a.proto.FilecoinUpdFRequest\x1a\x1b.proto.FilecoinUpdFResponse\x12U\n" +
	"\x18FilecoinGetSNStorageCost\x12\x1b.proto.FilecoinGSNSCRequest\x1a\x1c.proto.FilecoinGSNSCResponseB\x04Z\x02./b\x06proto3"

var (
	file_filecoin_client_sn_proto_rawDescOnce sync.Once
	file_filecoin_client_sn_proto_rawDescData []byte
)

func file_filecoin_client_sn_proto_rawDescGZIP() []byte {
	file_filecoin_client_sn_proto_rawDescOnce.Do(func() {
		file_filecoin_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_filecoin_client_sn_proto_rawDesc), len(file_filecoin_client_sn_proto_rawDesc)))
	})
	return file_filecoin_client_sn_proto_rawDescData
}

var file_filecoin_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_filecoin_client_sn_proto_goTypes = []any{
	(*FilecoinPutFRequest)(nil),   // 0: proto.FilecoinPutFRequest
	(*FilecoinPutFResponse)(nil),  // 1: proto.FilecoinPutFResponse
	(*FilecoinGetFRequest)(nil),   // 2: proto.FilecoinGetFRequest
	(*FilecoinGetFResponse)(nil),  // 3: proto.FilecoinGetFResponse
	(*FilecoinUpdFRequest)(nil),   // 4: proto.FilecoinUpdFRequest
	(*FilecoinUpdFResponse)(nil),  // 5: proto.FilecoinUpdFResponse
	(*FilecoinGSNSCRequest)(nil),  // 6: proto.FilecoinGSNSCRequest
	(*FilecoinGSNSCResponse)(nil), // 7: proto.FilecoinGSNSCResponse
}
var file_filecoin_client_sn_proto_depIdxs = []int32{
	0, // 0: proto.FilecoinSNService.FilecoinPutFile:input_type -> proto.FilecoinPutFRequest
	2, // 1: proto.FilecoinSNService.FilecoinGetFile:input_type -> proto.FilecoinGetFRequest
	4, // 2: proto.FilecoinSNService.FilecoinUpdateFile:input_type -> proto.FilecoinUpdFRequest
	6, // 3: proto.FilecoinSNService.FilecoinGetSNStorageCost:input_type -> proto.FilecoinGSNSCRequest
	1, // 4: proto.FilecoinSNService.FilecoinPutFile:output_type -> proto.FilecoinPutFResponse
	3, // 5: proto.FilecoinSNService.FilecoinGetFile:output_type -> proto.FilecoinGetFResponse
	5, // 6: proto.FilecoinSNService.FilecoinUpdateFile:output_type -> proto.FilecoinUpdFResponse
	7, // 7: proto.FilecoinSNService.FilecoinGetSNStorageCost:output_type -> proto.FilecoinGSNSCResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_filecoin_client_sn_proto_init() }
func file_filecoin_client_sn_proto_init() {
	if File_filecoin_client_sn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_filecoin_client_sn_proto_rawDesc), len(file_filecoin_client_sn_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filecoin_client_sn_proto_goTypes,
		DependencyIndexes: file_filecoin_client_sn_proto_depIdxs,
		MessageInfos:      file_filecoin_client_sn_proto_msgTypes,
	}.Build()
	File_filecoin_client_sn_proto = out.File
	file_filecoin_client_sn_proto_goTypes = nil
	file_filecoin_client_sn_proto_depIdxs = nil
}
