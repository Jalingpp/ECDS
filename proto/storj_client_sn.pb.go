// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: storj_client_sn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Int32ArraySN struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int32                `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int32ArraySN) Reset() {
	*x = Int32ArraySN{}
	mi := &file_storj_client_sn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32ArraySN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32ArraySN) ProtoMessage() {}

func (x *Int32ArraySN) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32ArraySN.ProtoReflect.Descriptor instead.
func (*Int32ArraySN) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{0}
}

func (x *Int32ArraySN) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// 客户端发起的向存储节点放置数据分片的请求
type StorjPutFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                             //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                             //待存储的文件名
	Repno         int32                  `protobuf:"varint,3,opt,name=repno,proto3" json:"repno,omitempty"`                                  //文件副本号
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`                              //文件版本号
	DataShards    []*Int32ArraySN        `protobuf:"bytes,5,rep,name=dataShards,proto3" json:"dataShards,omitempty"`                         //序列化后的数据分片
	MerkleLeaves  [][]byte               `protobuf:"bytes,6,rep,name=merkle_leaves,json=merkleLeaves,proto3" json:"merkle_leaves,omitempty"` //所有叶子节点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjPutFRequest) Reset() {
	*x = StorjPutFRequest{}
	mi := &file_storj_client_sn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjPutFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjPutFRequest) ProtoMessage() {}

func (x *StorjPutFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjPutFRequest.ProtoReflect.Descriptor instead.
func (*StorjPutFRequest) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{1}
}

func (x *StorjPutFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StorjPutFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjPutFRequest) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *StorjPutFRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StorjPutFRequest) GetDataShards() []*Int32ArraySN {
	if x != nil {
		return x.DataShards
	}
	return nil
}

func (x *StorjPutFRequest) GetMerkleLeaves() [][]byte {
	if x != nil {
		return x.MerkleLeaves
	}
	return nil
}

// 存储节点对请求的回复
type StorjPutFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno         int32                  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Root          []byte                 `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`         //存储节点计算得到的根哈希
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjPutFResponse) Reset() {
	*x = StorjPutFResponse{}
	mi := &file_storj_client_sn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjPutFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjPutFResponse) ProtoMessage() {}

func (x *StorjPutFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjPutFResponse.ProtoReflect.Descriptor instead.
func (*StorjPutFResponse) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{2}
}

func (x *StorjPutFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjPutFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *StorjPutFResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *StorjPutFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 客户端发起的向存储节点获取数据分片的请求
type StorjGetFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Rep           string                 `protobuf:"bytes,3,opt,name=rep,proto3" json:"rep,omitempty"`           //请求的副本号
	Dsnum         int32                  `protobuf:"varint,4,opt,name=dsnum,proto3" json:"dsnum,omitempty"`      //数据分片的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjGetFRequest) Reset() {
	*x = StorjGetFRequest{}
	mi := &file_storj_client_sn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjGetFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjGetFRequest) ProtoMessage() {}

func (x *StorjGetFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjGetFRequest.ProtoReflect.Descriptor instead.
func (*StorjGetFRequest) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{3}
}

func (x *StorjGetFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StorjGetFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjGetFRequest) GetRep() string {
	if x != nil {
		return x.Rep
	}
	return ""
}

func (x *StorjGetFRequest) GetDsnum() int32 {
	if x != nil {
		return x.Dsnum
	}
	return 0
}

// 存储节点对请求的回复
type StorjGetFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                             //文件名
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                              //文件版本号
	DataShards    []*Int32ArraySN        `protobuf:"bytes,3,rep,name=dataShards,proto3" json:"dataShards,omitempty"`                         //数据分片
	MerkleLeaves  [][]byte               `protobuf:"bytes,4,rep,name=merkle_leaves,json=merkleLeaves,proto3" json:"merkle_leaves,omitempty"` //校验分片对应的叶节点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjGetFResponse) Reset() {
	*x = StorjGetFResponse{}
	mi := &file_storj_client_sn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjGetFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjGetFResponse) ProtoMessage() {}

func (x *StorjGetFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjGetFResponse.ProtoReflect.Descriptor instead.
func (*StorjGetFResponse) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{4}
}

func (x *StorjGetFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjGetFResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StorjGetFResponse) GetDataShards() []*Int32ArraySN {
	if x != nil {
		return x.DataShards
	}
	return nil
}

func (x *StorjGetFResponse) GetMerkleLeaves() [][]byte {
	if x != nil {
		return x.MerkleLeaves
	}
	return nil
}

// 客户端发起的向存储节点更新数据分片的请求
type StorjUpdFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`                             //客户端ID
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                             //待更新的文件名
	Rep           int32                  `protobuf:"varint,3,opt,name=rep,proto3" json:"rep,omitempty"`                                      //待更新的文件副本号
	DataShards    []*Int32ArraySN        `protobuf:"bytes,4,rep,name=dataShards,proto3" json:"dataShards,omitempty"`                         //序列化后的数据分片
	MerkleLeaves  [][]byte               `protobuf:"bytes,5,rep,name=merkle_leaves,json=merkleLeaves,proto3" json:"merkle_leaves,omitempty"` //所有叶子节点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjUpdFRequest) Reset() {
	*x = StorjUpdFRequest{}
	mi := &file_storj_client_sn_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjUpdFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjUpdFRequest) ProtoMessage() {}

func (x *StorjUpdFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjUpdFRequest.ProtoReflect.Descriptor instead.
func (*StorjUpdFRequest) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{5}
}

func (x *StorjUpdFRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StorjUpdFRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjUpdFRequest) GetRep() int32 {
	if x != nil {
		return x.Rep
	}
	return 0
}

func (x *StorjUpdFRequest) GetDataShards() []*Int32ArraySN {
	if x != nil {
		return x.DataShards
	}
	return nil
}

func (x *StorjUpdFRequest) GetMerkleLeaves() [][]byte {
	if x != nil {
		return x.MerkleLeaves
	}
	return nil
}

// 存储节点对请求的回复
type StorjUpdFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` //待存储的文件名
	Repno         int32                  `protobuf:"varint,2,opt,name=repno,proto3" json:"repno,omitempty"`      //文件副本号
	Root          []byte                 `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`         //存储节点计算得到的根哈希
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`   //是否已通过验证并存储等信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjUpdFResponse) Reset() {
	*x = StorjUpdFResponse{}
	mi := &file_storj_client_sn_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjUpdFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjUpdFResponse) ProtoMessage() {}

func (x *StorjUpdFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjUpdFResponse.ProtoReflect.Descriptor instead.
func (*StorjUpdFResponse) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{6}
}

func (x *StorjUpdFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StorjUpdFResponse) GetRepno() int32 {
	if x != nil {
		return x.Repno
	}
	return 0
}

func (x *StorjUpdFResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *StorjUpdFResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StorjGSNSCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"` //客户端ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjGSNSCRequest) Reset() {
	*x = StorjGSNSCRequest{}
	mi := &file_storj_client_sn_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjGSNSCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjGSNSCRequest) ProtoMessage() {}

func (x *StorjGSNSCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjGSNSCRequest.ProtoReflect.Descriptor instead.
func (*StorjGSNSCRequest) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{7}
}

func (x *StorjGSNSCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type StorjGSNSCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	SnId          string                 `protobuf:"bytes,2,opt,name=snId,proto3" json:"snId,omitempty"`
	Storagecost   int32                  `protobuf:"varint,3,opt,name=storagecost,proto3" json:"storagecost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorjGSNSCResponse) Reset() {
	*x = StorjGSNSCResponse{}
	mi := &file_storj_client_sn_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorjGSNSCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjGSNSCResponse) ProtoMessage() {}

func (x *StorjGSNSCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storj_client_sn_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjGSNSCResponse.ProtoReflect.Descriptor instead.
func (*StorjGSNSCResponse) Descriptor() ([]byte, []int) {
	return file_storj_client_sn_proto_rawDescGZIP(), []int{8}
}

func (x *StorjGSNSCResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StorjGSNSCResponse) GetSnId() string {
	if x != nil {
		return x.SnId
	}
	return ""
}

func (x *StorjGSNSCResponse) GetStoragecost() int32 {
	if x != nil {
		return x.Storagecost
	}
	return 0
}

var File_storj_client_sn_proto protoreflect.FileDescriptor

const file_storj_client_sn_proto_rawDesc = "" +
	"\n" +
	"\x15storj_client_sn.proto\x12\x05proto\"&\n" +
	"\fInt32ArraySN\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x05R\x06values\"\xd4\x01\n" +
	"\x10StorjPutFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x03 \x01(\x05R\x05repno\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\x123\n" +
	"\n" +
	"dataShards\x18\x05 \x03(\v2\x13.proto.Int32ArraySNR\n" +
	"dataShards\x12#\n" +
	"\rmerkle_leaves\x18\x06 \x03(\fR\fmerkleLeaves\"s\n" +
	"\x11StorjPutFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x02 \x01(\x05R\x05repno\x12\x12\n" +
	"\x04root\x18\x03 \x01(\fR\x04root\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"r\n" +
	"\x10StorjGetFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x10\n" +
	"\x03rep\x18\x03 \x01(\tR\x03rep\x12\x14\n" +
	"\x05dsnum\x18\x04 \x01(\x05R\x05dsnum\"\xa3\x01\n" +
	"\x11StorjGetFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x123\n" +
	"\n" +
	"dataShards\x18\x03 \x03(\v2\x13.proto.Int32ArraySNR\n" +
	"dataShards\x12#\n" +
	"\rmerkle_leaves\x18\x04 \x03(\fR\fmerkleLeaves\"\xb6\x01\n" +
	"\x10StorjUpdFRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x10\n" +
	"\x03rep\x18\x03 \x01(\x05R\x03rep\x123\n" +
	"\n" +
	"dataShards\x18\x04 \x03(\v2\x13.proto.Int32ArraySNR\n" +
	"dataShards\x12#\n" +
	"\rmerkle_leaves\x18\x05 \x03(\fR\fmerkleLeaves\"s\n" +
	"\x11StorjUpdFResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05repno\x18\x02 \x01(\x05R\x05repno\x12\x12\n" +
	"\x04root\x18\x03 \x01(\fR\x04root\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"/\n" +
	"\x11StorjGSNSCRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\"f\n" +
	"\x12StorjGSNSCResponse\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x12\n" +
	"\x04snId\x18\x02 \x01(\tR\x04snId\x12 \n" +
	"\vstoragecost\x18\x03 \x01(\x05R\vstoragecost2\xaa\x02\n" +
	"\x0eStorjSNService\x12A\n" +
	"\fStorjPutFile\x12\x17.proto.StorjPutFRequest\x1a\x18.proto.StorjPutFResponse\x12A\n" +
	"\fStorjGetFile\x12\x17.proto.StorjGetFRequest\x1a\x18.proto.StorjGetFResponse\x12D\n" +
	"\x0fStorjUpdateFile\x12\x17.proto.StorjUpdFRequest\x1a\x18.proto.StorjUpdFResponse\x12L\n" +
	"\x15StorjGetSNStorageCost\x12\x18.proto.StorjGSNSCRequest\x1a\x19.proto.StorjGSNSCResponseB\x04Z\x02./b\x06proto3"

var (
	file_storj_client_sn_proto_rawDescOnce sync.Once
	file_storj_client_sn_proto_rawDescData []byte
)

func file_storj_client_sn_proto_rawDescGZIP() []byte {
	file_storj_client_sn_proto_rawDescOnce.Do(func() {
		file_storj_client_sn_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storj_client_sn_proto_rawDesc), len(file_storj_client_sn_proto_rawDesc)))
	})
	return file_storj_client_sn_proto_rawDescData
}

var file_storj_client_sn_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_storj_client_sn_proto_goTypes = []any{
	(*Int32ArraySN)(nil),       // 0: proto.Int32ArraySN
	(*StorjPutFRequest)(nil),   // 1: proto.StorjPutFRequest
	(*StorjPutFResponse)(nil),  // 2: proto.StorjPutFResponse
	(*StorjGetFRequest)(nil),   // 3: proto.StorjGetFRequest
	(*StorjGetFResponse)(nil),  // 4: proto.StorjGetFResponse
	(*StorjUpdFRequest)(nil),   // 5: proto.StorjUpdFRequest
	(*StorjUpdFResponse)(nil),  // 6: proto.StorjUpdFResponse
	(*StorjGSNSCRequest)(nil),  // 7: proto.StorjGSNSCRequest
	(*StorjGSNSCResponse)(nil), // 8: proto.StorjGSNSCResponse
}
var file_storj_client_sn_proto_depIdxs = []int32{
	0, // 0: proto.StorjPutFRequest.dataShards:type_name -> proto.Int32ArraySN
	0, // 1: proto.StorjGetFResponse.dataShards:type_name -> proto.Int32ArraySN
	0, // 2: proto.StorjUpdFRequest.dataShards:type_name -> proto.Int32ArraySN
	1, // 3: proto.StorjSNService.StorjPutFile:input_type -> proto.StorjPutFRequest
	3, // 4: proto.StorjSNService.StorjGetFile:input_type -> proto.StorjGetFRequest
	5, // 5: proto.StorjSNService.StorjUpdateFile:input_type -> proto.StorjUpdFRequest
	7, // 6: proto.StorjSNService.StorjGetSNStorageCost:input_type -> proto.StorjGSNSCRequest
	2, // 7: proto.StorjSNService.StorjPutFile:output_type -> proto.StorjPutFResponse
	4, // 8: proto.StorjSNService.StorjGetFile:output_type -> proto.StorjGetFResponse
	6, // 9: proto.StorjSNService.StorjUpdateFile:output_type -> proto.StorjUpdFResponse
	8, // 10: proto.StorjSNService.StorjGetSNStorageCost:output_type -> proto.StorjGSNSCResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_storj_client_sn_proto_init() }
func file_storj_client_sn_proto_init() {
	if File_storj_client_sn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storj_client_sn_proto_rawDesc), len(file_storj_client_sn_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storj_client_sn_proto_goTypes,
		DependencyIndexes: file_storj_client_sn_proto_depIdxs,
		MessageInfos:      file_storj_client_sn_proto_msgTypes,
	}.Build()
	File_storj_client_sn_proto = out.File
	file_storj_client_sn_proto_goTypes = nil
	file_storj_client_sn_proto_depIdxs = nil
}
